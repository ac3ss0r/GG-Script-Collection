--[[
credit to SaanModz for the functions that i skid

https://gameguardian.net/forum/files/file/3026-classlua/#google_vignette
]]--

function O_dinitial_search(class)
  
  	gg.setRanges(gg.REGION_OTHER)
  
  gg.searchNumber(":"..class, gg.TYPE_BYTE)
  count = gg.getResultsCount()
  if count==0 then else
  
    Refiner = gg.getResults(1)
    gg.refineNumber(Refiner[1].value, gg.TYPE_BYTE)
    count = gg.getResultsCount()
    
    val = gg.getResults(count)
    gg.addListItems(val)
  end
end

function CA_pointer_search()
  gg.clearResults()
  gg.setRanges(gg.REGION_C_ALLOC)
  gg.loadResults(gg.getListItems())
  gg.searchPointer(0)
  count = gg.getResultsCount()
  vel = gg.getResults(count)
  gg.clearList()
  gg.addListItems(vel)
end

function CA_apply_offset()
  tanker = 0xfffffffffffffff0
  local copy = false
  local l = gg.getListItems()
  if not copy then gg.removeListItems(l) end
  for i, v in ipairs(l) do
    v.address = v.address + tanker
    if copy then v.name = v.name..' #2' end
  end
  gg.addListItems(l)
end

function A_base_value()
  gg.setRanges(gg.REGION_ANONYMOUS)
  gg.loadResults(gg.getListItems())
  gg.clearList()
  gg.searchPointer(0)
  count = gg.getResultsCount()
  
  tel = gg.getResults(count)
  gg.addListItems(tel)
end

function A_base_accuracy()
  gg.setRanges(gg.REGION_ANONYMOUS | gg.REGION_C_ALLOC)
  gg.loadResults(gg.getListItems())
  gg.clearList()
  gg.searchPointer(0)
  count = gg.getResultsCount()
  kol = gg.getResults(count)
  i = 1
  h = {}
  while (i-1) < count do
    h[i] = {}
    h[i].address = kol[i].value
    h[i].flags = 32
    i = i + 1
  end
  
  gg.addListItems(h)
  
end

function A_user_given_offset(_offset, type)

	local _offset = load("return ".._offset)()

  local old_save_list = gg.getListItems()
  for i, v in ipairs(old_save_list) do
    v.address = v.address + _offset
    v.flags = type
  end
  
  gg.clearResults()
  gg.loadResults(old_save_list)
  
end

function findClassPointer(class)

	gg.clearResults()
	gg.clearList()
	
  	O_dinitial_search(class)
  	CA_pointer_search()
  	CA_apply_offset()
  	A_base_value()
 	A_base_accuracy()


end

function hackOffset(_offset, type, value)
	
	A_user_given_offset(_offset, type)
	gg.refineNumber("0~40" ,type)
	gg.getResults(99999999)
    gg.editAll(value, type)
 
end

local check1 = false

function Menu()

	if not check1 then
		gg.toast("Initializing, pls wait")
		findClassPointer("WeaponSounds")
		check1 = true
	end

  local menu = gg.choice({
  
    "Polymorpher",
    "Electric Shock (Sensitivity Troll)",
    "mr baest meele",
    "Infinite Points on kill",
    --"Unlimited Ammo",
    "Exit",
  },
  {nil},
  "gg.choice == mod menu ðŸ¤‘\n\nexecute in polygon. credit to zygiskPg source code for the offsets.")
  
  if menu == nil then else

    if menu == 1 then
    
      	polymorpher()
      
    end
   	
   	if menu == 2 then
   		
   		electricShock()
   		
   	end
   	
   	if menu == 3 then
   	
   		killAll()
   	
   	end
  	
  	if menu == 4 then
  		
  		infScore()
  		
  	end
  	
  	--[[if menu == 5 then
  	
  		infAmmo()
  	end]]--
  	
    if menu == 5 then
    
    	os.exit()
    	
    end

  end
  
  SMZ=-1
  
end

local bigFloat = "1000000.0"
local class = "WeaponSounds"

local polymorpherOffsets = {

	{
		"0x2D4",
		gg.TYPE_BYTE,
		1
	},
	{
		"0x2D8",
		gg.TYPE_FLOAT,
		bigFloat
	},
	{
		"0x3B4",
		gg.TYPE_DWORD,
		0
	},
	{
		"0x2E0",
		gg.TYPE_FLOAT,
		bigFloat
	},
	{
		"0x2A4",
		gg.TYPE_BYTE,
		1
	},
	{
		"0x2C8",
		gg.TYPE_FLOAT,
		bigFloat
	},
	{
		"0x2C0",
		gg.TYPE_FLOAT,
		bigFloat
	},

}

local elecOffets = {
	{
		"0x404",
		gg.TYPE_BYTE,
		1
	},
	{
		"0x408",
		gg.TYPE_FLOAT,
		bigFloat
	},
	{
		"0x40C",
		gg.TYPE_FLOAT,
		bigFloat
	},

}

local infScoreOffets = {
	{
		"0x368",
		gg.TYPE_BYTE,
		1
	},
	{
		"0x374",
		gg.TYPE_FLOAT,
		99999
	},
}

local killAllActive = {
	{
		"0x346",
		gg.TYPE_BYTE,
		1
	},
	{
		"0x348",
		gg.TYPE_FLOAT,
		5
	},
	{
		"0x34C",
		gg.TYPE_FLOAT,
		bigFloat
	},
}

local killAllActive = {
	{
		"0x346",
		gg.TYPE_BYTE,
		1
	},
	{
		"0x348",
		gg.TYPE_FLOAT,
		5
	},
	{
		"0x34C",
		gg.TYPE_FLOAT,
		bigFloat
	},
}

function polymorpher()
  
	for i,v in ipairs(polymorpherOffsets) do
  		hackOffset(v[1], v[2], v[3])
  	end
  	
end

function electricShock()
  
	for i,v in ipairs(elecOffets) do
  		hackOffset(v[1], v[2], v[3])
  	end
  	
end

function killAll()

	for i,v in ipairs(killAllActive) do
  		hackOffset(v[1], v[2], v[3])
  	end
  	--[[
  	gg.sleep(10)
  	
  	for i,v in ipairs(killAllDeactive) do
  		hackOffset(v[1], v[2], v[3])
  	end]]
  	
  	gg.isVisible(true)

end

function infScore()
  
	for i,v in ipairs(infScoreOffets) do
  		hackOffset(v[1], v[2], v[3])
  	end
  	
end

local reminder = gg.choice({
  
    "continue",
    "exit"
  },
  {nil},
  "you must execute this script while on polygon or training ground, otherwise it will not work.")
  
if reminder == 1 then

while true do
  if gg.isVisible(true)then
    gg.setVisible(false)SMZ=1
  end
  if SMZ==1 then Menu()end
end

end

if reminder == 2 then

os.exit()

end
