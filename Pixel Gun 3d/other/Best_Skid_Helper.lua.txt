do local v0=1989 -(1767 + 222) ;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;local v17;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;while true do if ((10 -5)==v0) then v21=nil;v22=nil;v23=nil;v24=nil;v0=4 + 2 ;end if (v0==(2 + 1)) then v13=nil;v14=nil;v15=nil;v16=nil;v0=15 -11 ;end if (v0==1) then v5=nil;v6=nil;v7=nil;v8=nil;v0=2;end if (v0==(10 -4)) then v25=0;while true do if (v25==4) then v12=_G[v8("\218\237\239\15\60\206","\169\153\157\102\82")][v8("\30\193\93","\109\180\63\154\61\37\200")];v13=_G[v8("\248\169\145\29\123\236","\139\221\227\116\21")][v8("\200\225\21\112","\175\146\96\18\20\52\65\225")];v14=_G[v8("\7\216\14\232\63\19","\116\172\124\129\81")][v8("\244\210\103","\134\183\23\220")];v25=103 -(83 + 15) ;end if (v25==(1316 -(227 + 1082))) then local v26=0 + 0 ;while true do if (v26==1) then v23=_G[v8("\59\246\70\157\2\95\115\61","\79\153\40\232\111\61\22")];v25=8;break;end if (v26==0) then v21=_G[v8("\232\71\226\51\248\86","\155\34\142\86")];v22=_G[v8("\249\123\239\71\130\81","\140\21\159\38\225\58\93\168")] or _G[v8("\84\221\205\22\69","\32\188\175\122")][v8("\224\63\215\120\220\254","\149\81\167\25\191")] ;v26=1;end end end if (v25==6) then local v27=0;while true do if (v27==(0 + 0)) then v18=_G[v8("\254\253\226\163\252\246\224","\153\152\150\197")] or function()return _ENV;end ;v19=_G[v8("\9\118\84\184\212\214\27\103\65\183\221\199","\122\19\32\213\177\162")];v27=1;end if (v27==1) then v20=_G[v8("\20\182\118\36\24","\100\213\23\72\116")];v25=2 + 5 ;break;end end end if (v25==(1 + 0)) then local v28=0 -0 ;while true do if (v28==0) then v4=bit32 or bit ;v5=v4.bxor;v28=1;end if (v28==1) then v6=table.concat;v25=1 + 1 ;break;end end end if (v25==5) then local v29=0 + 0 ;while true do if ((1103 -(500 + 603))==v29) then v15=_G[v8("\184\93\3\167\169","\204\60\97\203")][v8("\194\247\6\175\77\213","\161\152\104\204\44")];v16=_G[v8("\35\198\228\83\195","\87\167\134\63\166")][v8("\84\190\17\66\202\12","\61\208\98\39\184\120\181")];v29=1;end if (v29==(694 -(487 + 206))) then v17=_G[v8("\134\4\37\18","\235\101\81\122")][v8("\7\95\169\197\61","\107\59\204\189\77\19\65")];v25=6;break;end end end if (v25==0) then local v30=0;while true do if (v30==(1 + 0)) then v3=string.sub;v25=1 + 0 ;break;end if (v30==(0 -0)) then v1=string.char;v2=string.byte;v30=1;end end end if (v25==(28 -20)) then v24=nil;v24=function(v31,v32,...)local v37=1211 -(812 + 399) ;local v38;local v39;local v40;local v41;local v42;local v43;local v44;local v45;local v46;local v47;local v48;local v49;local v50;local v51;while true do if ((1 + 0)==v37) then v41=nil;v42=nil;v43=nil;v37=2;end if (v37==3) then v47=nil;v48=nil;v49=nil;v37=1131 -(471 + 656) ;end if (v37==(14 -10)) then v50=nil;v51=nil;while true do if (v38==3) then v51=nil;while true do local v63=0 -0 ;local v64;while true do if (v63==(485 -(194 + 291))) then v64=0 -0 ;while true do if (v64==(1552 -(743 + 808))) then local v66=72 -(9 + 63) ;while true do if (v66==(1202 -(818 + 384))) then if (v39==(22 -17)) then local v72=0 -0 ;local v73;while true do if (v72==0) then v73=415 -(324 + 91) ;while true do local v84=0 -0 ;while true do if (v84==(0 + 0)) then if (v73==(2 -1)) then return v51(v50(),{},v32)(...);end if (v73==(0 + 0)) then local v125=0 + 0 ;while true do if (v125==1) then v73=3 -2 ;break;end if (v125==(0 -0)) then v51=nil;v51=function(v150,v151,v152)local v155=0 -0 ;local v156;local v157;local v158;local v159;local v160;while true do if (0==v155) then v156=0 + 0 ;v157=nil;v155=1 -0 ;end if (v155==(85 -(60 + 24))) then v158=nil;v159=nil;v155=2 -0 ;end if (v155==(1 + 1)) then v160=nil;while true do if (v156==2) then while true do local v202=0;local v203;while true do if ((1938 -(1325 + 613))==v202) then v203=0 -0 ;while true do if (v203==0) then if (1==v157) then local v231=19 -(12 + 7) ;while true do if (v231==(0 -0)) then local v246=1930 -(1913 + 17) ;while true do if (0==v246) then v160=v150[2 + 1 ];return function(...)local v260=0;local v261;local v262;local v263;local v264;local v265;local v266;local v267;while true do if (v260==(6 -3)) then v267=nil;while true do if ((495 -(208 + 285))==v261) then local v285=0;while true do if ((413 -(41 + 371))==v285) then v261=2 + 1 ;break;end if (v285==(0 + 0)) then v266=nil;v267=nil;v285=330 -(98 + 231) ;end end end if (v261==(598 -(467 + 128))) then while true do if (v262==(0 -0)) then local v289=288 -(198 + 90) ;local v290;while true do if (v289==(0 -0)) then v290=0 + 0 ;while true do if (v290==(0 -0)) then local v304=0;while true do if (v304==(1071 -(889 + 181))) then v290=1 + 0 ;break;end if (v304==(658 -(546 + 112))) then v263=(1773 -(10 + 293)) -(1135 + 185 + (591 -(85 + 357))) ;v264= -(((4218 -(209 + 245)) -2160) -(((2661 -(873 + 102)) -((2507 -(530 + 837)) + 242 + 137)) + 1026 + 410));v304=1 + 0 ;end end end if (v290==(1 + 0)) then v262=1 + 0 ;break;end end break;end end end if (v262==1) then local v291=398 -(87 + 311) ;local v292;while true do if (v291==(0 -0)) then v292=0;while true do if (v292==0) then local v305=755 -(36 + 719) ;while true do if (v305==(3 -2)) then v292=1964 -(704 + 1259) ;break;end if (v305==0) then v265={...};v266=v21("#",...) -1 ;v305=4 -3 ;end end end if (v292==1) then v262=1 + 1 ;break;end end break;end end end if (2==v262) then local v293=0;while true do if (v293==(0 + 0)) then local v300=1835 -(1274 + 561) ;while true do if (v300==0) then v267=nil;v267=function()local v307=488 -(292 + 196) ;local v308;local v309;local v310;local v311;local v312;local v313;local v314;local v315;local v316;local v317;while true do if (v307==(2 -0)) then v315=(v266-v310) + 1 + (1674 -(1088 + 586)) ;v316=nil;v317=nil;while true do local v329=0 -0 ;local v330;local v331;while true do if (v329==0) then v330=1193 -(624 + 569) ;v331=nil;v329=1;end if (v329==(1 + 0)) then while true do if (v330==(1229 -(661 + 568))) then v331=0 -0 ;while true do if (v331==(0 + 0)) then local v341=0;local v342;while true do if (v341==0) then v342=1851 -(791 + 1060) ;while true do if (v342==(528 -(291 + 237))) then local v343=0 -0 ;while true do if ((0 + 0)==v343) then v316=v308[v263];v317=v316[2 -1 ];v343=1 + 0 ;end if (v343==(1 -0)) then v342=1 + 0 ;break;end end end if (v342==(1 + 0)) then v331=1;break;end end break;end end end if (v331==1) then if (v317<=(12 + 5)) then if (v317<=(11 -3)) then if (v317<=(2 + (1635 -(1438 + 196)))) then if (v317<=((4 -(2 -1)) -(1774 -(494 + 1278)))) then if (v317>0) then v314[v316[349 -((35 -22) + 247 + 87) ]]=v151[v316[((1124 + 609) -((2594 -2026) + (3817 -2748))) -(57 + (1580 -(741 + 816)) + (446 -(425 + 17)) + 9) ]];else local v348=0;local v349;local v350;local v351;local v352;local v353;local v354;while true do if (v348==(1 + 0)) then v351=nil;v352=nil;v348=2 + 0 ;end if ((43 -(22 + 18))==v348) then while true do if (v349==2) then v354=nil;while true do if (v350==(3 -2)) then local v471=0 -0 ;local v472;while true do if ((0 -0)==v471) then v472=0 + 0 ;while true do if (v472==(1915 -(323 + 1591))) then v350=2;break;end if (v472==(747 -(59 + 688))) then v264=(v353 + v351) -((2 -1) + 0 + 0) ;v354=0 + 0 ;v472=1;end end break;end end end if (v350==(0 -0)) then local v473=0 + 0 ;local v474;while true do if ((0 + 0)==v473) then v474=0;while true do if (1==v474) then v350=377 -(100 + 276) ;break;end if (v474==(0 -0)) then local v520=0 -0 ;while true do if (1==v520) then v474=182 -(48 + 133) ;break;end if (v520==0) then v351=v316[(4220 -2740) -(589 + (1111 -(179 + 43))) ];v352,v353=v311(v314[v351](v22(v314,v351 + (1988 -((1904 -(217 + 176)) + 476)) ,v316[98 -((195 -133) + 11 + 1 + 19 + 2) ])));v520=1;end end end end break;end end end if (v350==2) then for v491=v351,v264 do local v492=508 -(317 + 191) ;local v493;local v494;while true do if (0==v492) then v493=0 + 0 ;v494=nil;v492=655 -(334 + 320) ;end if (v492==(1 + 0)) then while true do if (v493==(0 + 0)) then v494=0 -0 ;while true do if (v494==(0 + 0)) then v354=v354 + (1788 -(4 + 325 + 518 + 940)) ;v314[v491]=v352[v354];break;end end break;end end break;end end end break;end end break;end if (v349==(0 + 0)) then local v450=0 + 0 ;while true do if (v450==(3 -2)) then v349=1 + 0 ;break;end if (v450==(0 + 0)) then v350=0;v351=nil;v450=1;end end end if ((1 + 0)==v349) then v352=nil;v353=nil;v349=4 -2 ;end end break;end if (v348==(2 + 0)) then v353=nil;v354=nil;v348=3;end if (v348==0) then v349=0 + 0 ;v350=nil;v348=1 + 0 ;end end end elseif (v317>(131 -(33 + 96))) then local v355=0;local v356;local v357;local v358;while true do if (v355==0) then v356=0 + 0 ;v357=nil;v355=4 -3 ;end if (v355==(585 -(423 + 161))) then v358=nil;while true do if (v356==(0 + 0)) then local v451=93 -(79 + 14) ;while true do if ((1739 -(1689 + 49))==v451) then v356=4 -3 ;break;end if (v451==0) then v357=0;v358=nil;v451=1 + 0 ;end end end if (v356==(1 + 0)) then while true do if (v357==(0 + 0)) then v358=v316[((2 + 2) -(3 + 0)) + 1 ];v314[v358](v22(v314,v358 + (2 -1) + 0 + 0 ,v264));break;end end break;end end break;end end else local v359=0 -0 ;local v360;local v361;local v362;while true do if (v359==1) then v362=nil;while true do if (v360==(0 + 0)) then local v452=0;while true do if (v452==(0 + 0)) then v361=0;v362=nil;v452=1 + 0 ;end if (v452==1) then v360=1 -0 ;break;end end end if (v360==(1 + 0)) then while true do if (v361==(0 -0)) then v362=v316[(887 + 1108) -((1833 -(111 + 428)) + 4 + 695) ];v314[v362]=v314[v362](v22(v314,v362 + ((5 -3) -(1 + 0)) ,v316[(2169 -(868 + 295)) -((490 -(93 + 208)) + 629 + 185) ]));break;end end break;end end break;end if (v359==(565 -(455 + 110))) then v360=0;v361=nil;v359=357 -(57 + 299) ;end end end elseif (v317<=(921 -((1169 -(535 + 317)) + 41 + 0 + 558))) then if (v317>(((1581 + 1436) -(385 + (1497 -(55 + 522)))) -((1397 -725) + (2874 -1838)))) then v152[v316[8 -(9 -4) ]]=v314[v316[((15 -7) -6) + 0 ]];else local v365=0;local v366;local v367;while true do if (v365==(572 -(263 + 308))) then while true do if (v366==0) then v367=v316[(4 -2) + (0 -0) + (0 -0) ];v314[v367](v22(v314,v367 + (136 -(32 + 103)) ,v316[8 -(5 + 0) ]));break;end end break;end if (v365==0) then v366=1746 -(263 + 1483) ;v367=nil;v365=1 + 0 ;end end end elseif (v317<=((991 -((1542 -(27 + 1154)) + 134 + 323)) -(70 + 56 + 41))) then local v368=0 -0 ;local v369;local v370;local v371;local v372;local v373;local v374;while true do if (v368==(1 + 2)) then while true do if (v369==(0 + 0)) then v370=956 -(405 + 551) ;v371=nil;v369=2 -1 ;end if (v369==(1 + 0)) then v372=nil;v373=nil;v369=1 + 1 ;end if (v369==(1026 -(150 + 874))) then v374=nil;while true do if (v370==2) then for v495=v371,v264 do local v496=0 -0 ;local v497;local v498;while true do if (v496==(1 + 0)) then while true do if (0==v497) then v498=0;while true do if (v498==0) then v374=v374 + (1 -0) ;v314[v495]=v372[v374];break;end end break;end end break;end if (v496==(0 -0)) then v497=0 -0 ;v498=nil;v496=1 + 0 ;end end end break;end if (v370==1) then local v478=0;while true do if (v478==(0 + 0)) then local v506=0 -0 ;while true do if (v506==(1 + 0)) then v478=1576 -(961 + 614) ;break;end if (v506==(411 -(165 + 246))) then v264=(v373 + v371) -((562 -(307 + 253)) -(2 -(1 + 0))) ;v374=0 + 0 ;v506=1613 -(1229 + 383) ;end end end if (v478==(1208 -(67 + 1140))) then v370=1534 -(366 + 1166) ;break;end end end if (v370==(0 + 0)) then local v479=1862 -(1187 + 675) ;while true do if (v479==(0 + 0)) then local v507=0;while true do if (v507==(845 -(330 + 515))) then v371=v316[(63 + (1820 -(273 + 1532))) -((220 -171) + (89 -62)) ];v372,v373=v311(v314[v371](v22(v314,v371 + 1 + 0 + (716 -(712 + 4)) ,v264)));v507=450 -(313 + 136) ;end if (v507==(2 -1)) then v479=1 + 0 ;break;end end end if (v479==1) then v370=1;break;end end end end break;end end break;end if (v368==(1048 -(677 + 369))) then v373=nil;v374=nil;v368=1 + 2 ;end if (v368==(1 -0)) then v371=nil;v372=nil;v368=1501 -(1051 + 448) ;end if (v368==0) then v369=0 + 0 ;v370=nil;v368=1 + 0 ;end end elseif (v317==(3 + 2 + 1 + 1)) then if (v314[v316[(1654 -(419 + 1146)) -(20 + (792 -(272 + 453))) ]]==v316[520 -(390 + 126) ]) then v263=v263 + 1 + 0 ;else v263=v316[(20 -15) -(1 + 1) ];end elseif (v316[(1410 -(109 + 869 + 424)) -((2216 -(773 + 243)) -((2769 -1889) + 314)) ]==v314[v316[4]]) then v263=v263 + (1436 -((1707 -((2336 -(704 + 1133)) + 947)) + (3511 -2337))) ;else v263=v316[(1 + 2 + (1949 -(1130 + 811))) -(5 + (5 -2)) ];end elseif (v317<=(36 -((140 + 519) -(464 + 30 + (1171 -(815 + 215)))))) then if (v317<=((6 -4) + 6 + ((2626 -1193) -(1398 + 23 + 10)))) then if (v317>9) then v314[v316[5 -(3 + 0) ]]=v314[v316[((409 + 3607) -2465) -((340 -182) + (4132 -2742)) ]] -v316[(667 -524) -((410 -295) + ((341 + 386) -((515 -284) + (795 -323)))) ] ;else v314[v316[1 + 1 ]]=v314[v316[1 + 2 ]] + v316[948 -((908 -(66 + 108)) + 210) ] ;end elseif (v317==(((4471 -2459) -((1354 -(12 + 31)) + (2140 -(483 + 983)))) -(28 -(23 -(4 + 7))))) then v314[v316[((323 + 2652) -(3272 -(78 + 816))) -(345 + (790 -(119 + 421))) ]]=v314[v316[142 -(27 + 112) ]][v316[(209 + 400 + 885) -(((2605 -1253) -((3450 -2401) + (14 -8))) + 83 + 1110) ]];else v314[v316[2]]=v314[v316[((2001 -1456) -((941 -519) + 2 + 110)) -8 ]];end elseif (v317<=((783 -(768 + 10)) + (430 -(99 + 322)))) then if (v317==((2179 -(1391 + 164)) -(((2200 -1249) -(1665 -(119 + 1007))) + (361 -162)))) then local v381=0;local v382;local v383;local v384;local v385;while true do if (v381==(3 -2)) then v384=nil;v385=nil;v381=2;end if (v381==0) then v382=198 -(163 + 35) ;v383=nil;v381=1 + 0 ;end if (v381==(942 -(681 + 259))) then while true do if ((1476 -(320 + 1155))==v382) then v385=nil;while true do if (v383==0) then local v480=0 -0 ;local v481;while true do if ((0 + 0)==v480) then v481=0;while true do if (v481==(1 + 0)) then v383=1 + 0 ;break;end if (v481==0) then local v522=0 -0 ;while true do if (v522==(1 -0)) then v481=1;break;end if (0==v522) then v384=v316[2];v385=v314[v384];v522=1 -0 ;end end end end break;end end end if (v383==(1 -0)) then for v499=v384 + (205 -(16 + 188)) + (1963 -(405 + 1558)) ,v264 do v16(v385,v314[v499]);end break;end end break;end if ((0 -0)==v382) then v383=0 + 0 ;v384=nil;v382=650 -(393 + 256) ;end end break;end end else v314[v316[1 + 1 ]]=v314[v316[3]][v314[v316[4 + 0 ]]];end elseif (v317<=(((1803 -(27 + 131)) -((981 -(24 + 1)) + (1465 -1094))) -((398 -205) + ((1161 -(529 + 141)) -(2285 -(739 + 1165)))))) then v314[v316[(1084 -(169 + 913)) -(0 + 0) ]]=v316[(189 + 145) -(((343 -138) -(22 + 55)) + ((1690 -1229) -258)) ];elseif (v317==(39 -23)) then local v426=1787 -(592 + 1195) ;local v427;local v428;local v429;local v430;local v431;local v432;while true do if (v426==(1477 -(753 + 722))) then v431=nil;v432=nil;v426=14 -11 ;end if (v426==(4 -1)) then while true do if ((1 + 0)==v427) then local v468=0 -0 ;while true do if (v468==(3 -2)) then v427=2;break;end if (v468==(1280 -(871 + 409))) then v430=nil;v431=nil;v468=594 -(134 + 459) ;end end end if (v427==(1983 -(1658 + 323))) then v432=nil;while true do if (v428==(4 -3)) then local v500=0 -0 ;while true do if (v500==(589 -(140 + 449))) then v264=(v431 + v429) -((1550 -(31 + 1517)) -1) ;v432=0 -0 ;v500=1;end if (v500==(1 + 0)) then v428=2;break;end end end if (v428==(0 + 0)) then local v501=0;local v502;while true do if (v501==0) then v502=0;while true do if (v502==1) then v428=4 -3 ;break;end if (v502==(0 + 0)) then local v543=1688 -(206 + 1482) ;while true do if (v543==(0 -0)) then v429=v316[1444 -(966 + 476) ];v430,v431=v311(v314[v429](v314[v429 + (807 -(13 + 793)) + 0 + 0 ]));v543=1;end if (v543==1) then v502=1;break;end end end end break;end end end if (v428==2) then for v508=v429,v264 do local v509=468 -(349 + 119) ;local v510;local v511;while true do if (v509==1) then while true do if (v510==0) then v511=0 + 0 ;while true do if (v511==(214 -(64 + 150))) then v432=v432 + 1 + 0 + 0 ;v314[v508]=v430[v432];break;end end break;end end break;end if (v509==(0 -0)) then v510=1528 -(899 + 629) ;v511=nil;v509=1 + 0 ;end end end break;end end break;end if (v427==(0 -0)) then local v469=1963 -(965 + 998) ;while true do if (v469==(1192 -(16 + 1176))) then v428=0 + 0 ;v429=nil;v469=1;end if (v469==(1539 -(390 + 1148))) then v427=1 + 0 ;break;end end end end break;end if (v426==(1755 -(1647 + 107))) then v429=nil;v430=nil;v426=8 -6 ;end if (v426==(0 + 0)) then v427=0 + 0 ;v428=nil;v426=1;end end else local v433=0 -0 ;local v434;local v435;local v436;local v437;local v438;while true do if (v433==(486 -(277 + 207))) then v438=nil;while true do if (v434==(661 -(80 + 581))) then v435=0 + 0 ;v436=nil;v434=1;end if (v434==(2 -1)) then local v470=0 -0 ;while true do if (v470==(2 -1)) then v434=2;break;end if (v470==(0 -0)) then v437=nil;v438=nil;v470=1;end end end if (v434==2) then while true do if (v435==(1 + 1)) then if (v437>0) then if (v438<=v314[v436 + (961 -(922 + 38)) ]) then local v523=0;local v524;local v525;while true do if (v523==(1 -0)) then while true do if (v524==(0 -0)) then v525=0 -0 ;while true do if (v525==0) then v263=v316[2 + 0 + 0 + (1 -(1586 -(1159 + 427))) ];v314[v436 + (3 -2) + (1347 -(711 + 634)) ]=v438;break;end end break;end end break;end if (v523==(0 + 0)) then v524=0;v525=nil;v523=1;end end end elseif (v438>=v314[v436 + (1750 -(74 + 114 + 1561)) ]) then local v526=0;local v527;local v528;while true do if (1==v526) then while true do if (v527==(0 + 0)) then v528=0;while true do if (v528==(0 + 0)) then v263=v316[1435 -(307 + 1125) ];v314[v436 + 1 + 2 ]=v438;break;end end break;end end break;end if (v526==(269 -(131 + 138))) then v527=0 -0 ;v528=nil;v526=1 -0 ;end end end break;end if (v435==(1 -0)) then local v503=0;while true do if (v503==(4 -3)) then v435=2;break;end if (v503==0) then local v519=0 -0 ;while true do if (v519==1) then v503=2 -1 ;break;end if (v519==(0 -0)) then v438=v314[v436] + v437 ;v314[v436]=v438;v519=1;end end end end end if (v435==(0 + 0)) then local v504=514 -(437 + 77) ;local v505;while true do if (v504==0) then v505=0 -0 ;while true do if (v505==(0 + 0)) then local v545=1377 -(494 + 883) ;while true do if (v545==(1 + 0)) then v505=611 -(499 + 111) ;break;end if (v545==(434 -(324 + 110))) then v436=v316[(714 -(169 + 544)) + ((2916 -(1379 + 360)) -(684 + 341 + (1104 -(848 + 105)))) ];v437=v314[v436 + 1 + 1 + 0 + 0 ];v545=1;end end end if (v505==(1012 -(1004 + 7))) then v435=1;break;end end break;end end end end break;end end break;end if (v433==(374 -(194 + 179))) then v436=nil;v437=nil;v433=1 + 1 ;end if (v433==(0 -0)) then v434=100 -(27 + 73) ;v435=nil;v433=1 + 0 ;end end end elseif (v317<=(21 + 5)) then if (v317<=((123 -76) -(47 -21))) then if (v317<=(28 -(629 -((210 -125) + 535)))) then if (v317==((47 + 1026) -((690 -(54 + 372)) + (3224 -2433)))) then for v424=v316[(551 -(350 + 200)) + (426 -(221 + 204)) ],v316[(7 + 3) -(4 + 3) ] do v314[v424]=nil;end else local v390=599 -(500 + 99) ;local v391;local v392;while true do if (v390==0) then local v444=1936 -(120 + 1816) ;while true do if (1==v444) then v390=1;break;end if (v444==(0 + 0)) then v391=0;v392=nil;v444=1 -0 ;end end end if (v390==(2 -1)) then while true do if (v391==(0 -0)) then v392=v316[(12 -(7 + 4)) + (543 -(358 + 184)) ];v314[v392](v314[v392 + ((2088 -(561 + 671)) -(125 + 477 + 179 + 74)) ]);break;end end break;end end end elseif (v317==(1111 -((1986 -(442 + 1457)) + 220 + 784))) then local v393=0 + 0 ;local v394;local v395;local v396;while true do if (v393==0) then v394=0;v395=nil;v393=96 -(62 + 33) ;end if (v393==(3 -2)) then v396=nil;while true do if (0==v394) then local v455=0 -0 ;while true do if (1==v455) then v394=1 + 0 ;break;end if (v455==(0 -0)) then v395=0;v396=nil;v455=1;end end end if (v394==(340 -(38 + 301))) then while true do if (v395==(0 + 0)) then v396=v316[3 -1 ];v314[v396]=v314[v396](v314[v396 + 1 + 0 + 0 + (710 -(4 + 706)) ]);break;end end break;end end break;end end else v314[v316[938 -((2003 -1308) + 73 + 168) ]]=v314[v316[1 + ((1 + 1) -0) ]]%v316[(1071 -(915 + 154)) + (272 -(189 + 83)) + 1 + 1 ] ;end elseif (v317<=(67 -44)) then if (v317==(46 -(21 + 3))) then v314[v316[3 -1 ]]= #v314[v316[(2551 -1721) -(206 + 574 + 8 + 39) ]];else local v399=0 + 0 ;local v400;local v401;local v402;while true do if (v399==(0 + 0)) then v400=0;v401=nil;v399=590 -(278 + 311) ;end if (v399==(3 -2)) then v402=nil;while true do if (v400==(548 -(297 + 251))) then v401=1914 -(253 + 1661) ;v402=nil;v400=1549 -(460 + 1088) ;end if (1==v400) then while true do if (v401==(0 + 0)) then v402=v316[3 -1 ];do return v314[v402](v22(v314,v402 + 1 + 0 ,v316[(1 + 3) -(1 + 0) ]));end break;end end break;end end break;end end end elseif (v317<=(1 + 4 + (1166 -(789 + 358)))) then local v403=0 -0 ;local v404;local v405;local v406;local v407;local v408;while true do if (v403==(349 -(329 + 18))) then v408=nil;while true do if (v404==(3 -1)) then while true do if (v405==(1 + 0)) then v408=v314[v406 + (1990 -(1388 + 600)) ];if (v408>(0 -0)) then if (v407>v314[v406 + ((4 -2) -((1 + 0) -(0 + 0))) ]) then v263=v316[718 -(186 + 529) ];else v314[v406 + (5 -2) ]=v407;end elseif (v407<v314[v406 + ((875 + 780) -(51 + 1603)) ]) then v263=v316[(40 + (45 -35)) -((137 -108) + 11 + 7) ];else v314[v406 + 3 + (0 -0) + 0 ]=v407;end break;end if (v405==0) then local v486=618 -(222 + 396) ;local v487;while true do if (v486==(0 + 0)) then v487=0 + 0 ;while true do if ((1280 -(1133 + 147))==v487) then local v529=0;while true do if (v529==0) then v406=v316[(853 + 249) -((1102 -(143 + 364)) + 1 + (1639 -(2373 -(623 + 615)))) ];v407=v314[v406];v529=2 -1 ;end if (v529==(1 -0)) then v487=2 -1 ;break;end end end if (v487==1) then v405=4 -3 ;break;end end break;end end end end break;end if (v404==(0 + 0)) then v405=0 + 0 ;v406=nil;v404=2 -1 ;end if (v404==(551 -(525 + 25))) then v407=nil;v408=nil;v404=323 -(220 + 101) ;end end break;end if (v403==0) then v404=514 -(391 + 123) ;v405=nil;v403=171 -(100 + 70) ;end if (v403==(857 -(824 + 32))) then v406=nil;v407=nil;v403=1603 -(1238 + 363) ;end end elseif (v317>((1747 -(870 + 841)) -(957 -(830 + 116)))) then v314[v316[1 + 1 ]]={};elseif  not v314[v316[((3906 -(1189 + 100)) -(365 + 758 + 48 + 408)) -((2344 -(1370 + 195)) + 257) ]] then v263=v263 + ((6 -4) -(3 -2)) + (1730 -(397 + 1333)) ;else v263=v316[(671 + 192) -(261 + (1889 -1290)) ];end elseif (v317<=((1075 -(336 + 692)) -16)) then if (v317<=(((472 + 838) -((3692 -2720) + (916 -660))) -(6 + 48))) then if (v317==((69 + 9) -(6 + 45))) then local v409=0 -0 ;local v410;local v411;local v412;local v413;while true do if (v409==(5 -3)) then while true do if (v410==(3 -2)) then local v456=421 -(122 + 299) ;local v457;while true do if ((0 + 0)==v456) then v457=1023 -(348 + 675) ;while true do if (v457==1) then v410=2;break;end if (0==v457) then local v512=0 -0 ;while true do if (v512==(1 + 0)) then v457=1 + 0 ;break;end if ((0 + 0)==v512) then v413={};v412=v19({},{[v8("\61\196\240\70\10\7\227","\98\155\153\40\110")]=function(v530,v531)local v534=0 + 0 ;local v535;local v536;while true do if (v534==(0 -0)) then local v557=0 + 0 ;while true do if (v557==0) then v535=1124 -(614 + 510) ;v536=nil;v557=664 -(265 + 398) ;end if (v557==(1926 -(1412 + 513))) then v534=1189 -(1144 + 44) ;break;end end end if (v534==(2 -1)) then while true do if (0==v535) then local v564=0;local v565;while true do if (v564==(0 -0)) then v565=0 -0 ;while true do if (v565==0) then v536=v413[v531];return v536[3 -(5 -3) ][v536[(4 + 0) -((80 -(15 + 64)) + (1931 -(1073 + 857))) ]];end end break;end end end end break;end end end,[v8("\124\96\36\208\84\86\36\209\70\71","\35\63\74\181")]=function(v530,v531,v532)local v537=0;local v538;local v539;while true do if (v537==(0 + 0)) then local v558=1977 -(1350 + 627) ;while true do if (v558==(3 -2)) then v537=1 -0 ;break;end if ((1311 -(1299 + 12))==v558) then v538=0 -0 ;v539=nil;v558=1;end end end if (v537==(1248 -(559 + 688))) then while true do if ((0 + 0)==v538) then v539=v413[v531];v539[(1299 -(23 + 95)) -(575 + 490 + (252 -(107 + 30))) ][v539[1 + 1 + (0 -0) ]]=v532;break;end end break;end end end});v512=1 + 0 ;end end end end break;end end end if (v410==(0 + 0)) then local v458=0;local v459;while true do if (v458==(0 -0)) then v459=0;while true do if ((1 + 0)==v459) then v410=1;break;end if ((0 -0)==v459) then local v513=0 + 0 ;while true do if (1==v513) then v459=386 -(16 + 369) ;break;end if (v513==(0 + 0)) then v411=v309[v316[(1786 -871) -((314 -125) + 671 + 52) ]];v412=nil;v513=1 + 0 ;end end end end break;end end end if (v410==2) then for v463=(3616 -(889 + (1402 -668))) -((1439 -472) + (3048 -2023)) ,v316[934 -(414 + 516) ] do local v464=0;local v465;local v466;local v467;while true do if (v464==1) then v467=nil;while true do if (v465==0) then local v518=0 -0 ;while true do if (v518==(0 + 0)) then v466=0 + 0 ;v467=nil;v518=1 + 0 ;end if (v518==1) then v465=1 + 0 ;break;end end end if (v465==(157 -(126 + 30))) then while true do if (v466==1) then if (v467[(3208 -(169 + 1646)) -((2651 -(71 + 1232)) + (73 -29)) ]==(1755 -((350 -118) + 1511))) then v413[v463-((254 + 128) -((2219 -(373 + 1612)) + (236 -155) + (181 -115))) ]={v314,v467[3]};else v413[v463-((186 -133) -((183 -141) + 10)) ]={v151,v467[(2669 -(1009 + 849)) -((1707 -(830 + 594)) + (1063 -538)) ]};end v313[ #v313 + ((905 + 473) -(((1168 -574) -((227 -168) + (36 -18))) + (2843 -(2613 -(274 + 356))))) ]=v413;break;end if (v466==(0 -0)) then local v541=716 -(663 + 53) ;local v542;while true do if (v541==0) then v542=0 + 0 ;while true do if (v542==(1 + 0)) then v466=1 -0 ;break;end if (v542==0) then v263=v263 + ((2 + 0) -(1 + 0)) ;v467=v308[v263];v542=1 -0 ;end end break;end end end end break;end end break;end if (v464==(1109 -(202 + 907))) then v465=0 + 0 ;v466=nil;v464=1;end end end v314[v316[(1673 -(950 + 335)) -((481 -304) + 209) ]]=v51(v411,v412,v152);break;end end break;end if (v409==(0 -0)) then local v445=0;while true do if (v445==(1812 -(598 + 1213))) then v409=1974 -(1897 + 76) ;break;end if (v445==(0 -0)) then v410=0;v411=nil;v445=1;end end end if (v409==1) then local v446=0 -0 ;while true do if (v446==1) then v409=760 -(247 + 511) ;break;end if (v446==(1258 -(838 + 420))) then v412=nil;v413=nil;v446=1 + 0 ;end end end end else v314[v316[((1 -0) + 5) -(15 -11) ]]();end elseif (v317<=((36 -11) + 3 + 1)) then local v414=0;local v415;local v416;local v417;while true do if (v414==(0 -0)) then v415=0 -0 ;v416=nil;v414=1 -0 ;end if ((2 -1)==v414) then v417=nil;while true do if (v415==(0 -0)) then local v461=580 -(470 + 110) ;while true do if (v461==(4 -3)) then v415=1 -0 ;break;end if (v461==(0 + 0)) then v416=0 -0 ;v417=nil;v461=752 -(198 + 553) ;end end end if (v415==1) then while true do if (0==v416) then v417=v316[5 -3 ];do return v22(v314,v417,v264);end break;end end break;end end break;end end elseif (v317>(1715 -(333 + 1352))) then do return;end else v314[v316[1 + 1 ]]=v152[v316[3]];end elseif (v317<=((11 + 16 + 2 + 14) -(20 -10))) then if (v317>(72 -(67 -27))) then v314[v316[(20 -14) -((1561 -(435 + 1123)) + 1 + 0) ]]=v314[v316[3 -(989 -(406 + 583)) ]]%v314[v316[4]] ;else v263=v316[1620 -(240 + 895 + ((1371 -(67 + 191)) -(686 -(4 + 51)))) ];end elseif (v317<=(15 + 5 + ((1224 -(246 + 66)) -(304 + 594)))) then local v420=0;local v421;local v422;local v423;while true do if (v420==(0 -0)) then v421=0 -0 ;v422=nil;v420=1;end if (v420==1) then v423=nil;while true do if (v421==(1 + 0)) then while true do if (v422==0) then v423=v316[(195 -((258 -102) + (47 -10))) + (1904 -(481 + 413 + (1638 -(341 + 287)))) ];v314[v423]=v314[v423](v22(v314,v423 + 1 ,v264));break;end end break;end if ((0 + 0)==v421) then local v462=0;while true do if (v462==(1084 -(401 + 683))) then v422=0;v423=nil;v462=1;end if (v462==(1 + 0)) then v421=1890 -(446 + 1443) ;break;end end end end break;end end elseif (v317==(22 + ((1309 -(834 + 297)) -(12 + (1732 -(496 + 1083)))))) then v314[v316[356 -((687 -(512 + 161)) + 3 + 23 + (793 -479)) ]]=v316[(31 -23) -(23 -18) ]~=((0 + 0) -(1358 -(1058 + 300))) ;else v314[v316[1192 -(50 + 1140) ]]=v316[3 + 0 + 0 + 0 ] + v314[v316[1522 -(112 + 1406) ]] ;end v263=v263 + 1 ;break;end end break;end end break;end end end break;end if (v307==(1 + 0)) then local v324=0;while true do if (v324==(1 + 0)) then v314={};for v334=(0 + 0 + (1977 -(1859 + 118))) -((2890 -(36 + 1330)) -(1021 + (2459 -(1871 + 85)))) ,v266 do if (v334>=v310) then v312[v334-v310 ]=v265[v334 + ((1 + 0) -(529 -(299 + 230))) ];else v314[v334]=v265[v334 + 1 + (0 -0) ];end end v324=2;end if ((0 + 0)==v324) then v312={};v313={};v324=225 -(97 + 127) ;end if ((1 + 1)==v324) then v307=2;break;end end end if (v307==0) then local v325=0 + 0 ;while true do if (v325==(497 -(487 + 9))) then v310=v160;v311=v49;v325=2;end if (v325==(7 -5)) then v307=38 -(16 + 21) ;break;end if (v325==0) then v308=v158;v309=v159;v325=1;end end end end end;v300=1 + 0 ;end if (v300==(341 -(322 + 18))) then v293=2 -1 ;break;end end end if (v293==1) then v262=3;break;end end end if (v262==3) then _G['A'],_G['B']=v49(v20(v267));if  not _G['A'][(2602 -(1227 + 104)) -(((5230 -(608 + 324)) -(3516 -(78 + 342))) + ((657 -(287 + 33)) -(122 + (247 -100)))) ] then local v294=0;local v295;local v296;local v297;while true do if (v294==(350 -(246 + 103))) then v297=nil;while true do if (v295==(1172 -(1114 + 58))) then local v322=0 -0 ;while true do if (v322==0) then v296=0 + 0 ;v297=nil;v322=1 + 0 ;end if (v322==(4 -3)) then v295=1 + 0 ;break;end end end if (v295==(1 + 0)) then while true do if (v296==0) then v297=v150[3 + 1 ][v263] or "?" ;error(v8("\104\249\195\5\185\190\58\94\232\195\3\187\234\123\79\186\234","\59\154\177\108\201\202\26")   .. v297   .. v8("\74\71","\23\125\136\210\28\223")   .. _G['A'][(20 -15) -(1 + 2) ] );break;end end break;end end break;end if (v294==(1990 -(1762 + 228))) then v295=494 -(447 + 47) ;v296=nil;v294=641 -(492 + 148) ;end end else return v22(_G['A'],1 + 1 + 0 ,_G['B']);end break;end end break;end if (v261==(2 -1)) then local v286=0 -0 ;while true do if ((0 -0)==v286) then v264=nil;v265=nil;v286=1676 -(100 + 1575) ;end if (v286==(1050 -(155 + 894))) then v261=775 -(238 + 535) ;break;end end end if (v261==(0 -0)) then v262=1788 -(1118 + 670) ;v263=nil;v261=1518 -(573 + 944) ;end end break;end if (v260==(1161 -(1121 + 40))) then v261=0 + 0 ;v262=nil;v260=1;end if (v260==2) then v265=nil;v266=nil;v260=1 + 2 ;end if ((528 -(46 + 481))==v260) then v263=nil;v264=nil;v260=2;end end end;end end end end end if (v157==(804 -(459 + 345))) then local v232=280 -(150 + 130) ;while true do if (v232==1) then v157=1;break;end if (v232==0) then local v247=0;while true do if (v247==(0 + 0)) then v158=v150[(5 -(12 -9)) -1 ];v159=v150[(1005 + 764) -(((756 + 1330) -1056) + ((1921 -(254 + 761)) -((487 -(217 + 234)) + (700 -(93 + 474))))) ];v247=1;end if (v247==(1 -0)) then v232=1 + 0 ;break;end end end end end break;end end break;end end end break;end if (1==v156) then local v190=1457 -(1190 + 267) ;while true do if (v190==(0 + 0)) then v159=nil;v160=nil;v190=1 + 0 ;end if ((1 -0)==v190) then v156=1 + 1 ;break;end end end if (0==v156) then local v191=907 -(575 + 332) ;while true do if (v191==(1292 -(861 + 430))) then v156=1;break;end if (v191==(1070 -(408 + 662))) then v157=0 -0 ;v158=nil;v191=1 + 0 ;end end end end break;end end end;v125=2 -1 ;end end end break;end end end break;end end end if (v39==(8 -5)) then local v74=0 -0 ;while true do if (v74==1) then local v78=652 -(366 + 286) ;while true do if (1==v78) then v74=1383 -(771 + 610) ;break;end if (v78==(0 + 0)) then v47=function(v102)local v113=0 -0 ;local v114;local v115;local v116;local v117;while true do if (0==v113) then v114=0;v115=nil;v113=1702 -(509 + 1192) ;end if (v113==(1 + 0)) then v116=nil;v117=nil;v113=1830 -(1824 + 4) ;end if (v113==2) then while true do if (v114==0) then local v161=0;while true do if (1==v161) then v114=1 + 0 ;break;end if ((0 -0)==v161) then v115=1378 -(1112 + 266) ;v116=nil;v161=1;end end end if (v114==(4 -3)) then v117=nil;while true do local v171=0;while true do if (v171==(1 + 0)) then if (v115==0) then local v192=0 -0 ;local v193;while true do if (v192==(0 -0)) then v193=0 -0 ;while true do if (1==v193) then v115=1 -0 ;break;end if (v193==0) then local v220=0 + 0 ;while true do if ((0 -0)==v220) then v116=nil;if  not v102 then local v244=0 -0 ;local v245;while true do if (v244==0) then v245=0 -(1178 -(37 + 1141)) ;while true do if (v245==0) then v102=v45();if (v102==(0 + 0 + 0)) then return "";end break;end end break;end end end v220=3 -2 ;end if (v220==1) then v193=1 -0 ;break;end end end end break;end end end if (v115==((1102 -(333 + 768)) -(1069 -(836 + 233)))) then local v194=0;local v195;while true do if (v194==(1172 -(459 + 713))) then v195=0;while true do if (v195==(0 + 0)) then local v221=0 -0 ;while true do if (v221==1) then v195=450 -(14 + 435) ;break;end if (v221==0) then v116=v12(v31,v40,(v40 + v102) -((3 -2) + ((173 + 192) -(54 + 24 + 287))) );v40=v40 + v102 ;v221=1;end end end if (v195==(4 -3)) then v115=(14 -9) -(1016 -(342 + 671)) ;break;end end break;end end end break;end if (v171==(0 -0)) then local v183=0;while true do if (v183==(0 -0)) then if (v115==(1 + 2 + (444 -(370 + 74)))) then return v15(v117);end if (v115==2) then local v208=1274 -(806 + 468) ;local v209;while true do if (v208==(0 + 0)) then v209=1790 -(1147 + 643) ;while true do if (v209==(0 + 0)) then local v233=0;while true do if ((0 + 0)==v233) then v117={};for v250=((2148 -(263 + 222)) -(79 + 82 + (3088 -1587))) + ((0 + 0) -0) , #v116 do v117[v250]=v11(v10(v12(v116,v250,v250)));end v233=1;end if (v233==1) then v209=1 + 0 ;break;end end end if (v209==(794 -(56 + 737))) then v115=5 -2 ;break;end end break;end end end v183=2 -1 ;end if (v183==1) then v171=474 -(344 + 129) ;break;end end end end end break;end end break;end end end;v48=v45;v78=1 + 0 ;end end end if (v74==(334 -(321 + 13))) then v46=function()local v85=0;local v86;local v87;local v88;local v89;local v90;local v91;local v92;while true do if (v85==3) then v92=nil;while true do local v124=0 + 0 ;while true do if (v124==1) then if (v86==(1 + 2)) then local v162=0 + 0 ;local v163;while true do if (v162==(0 + 0)) then v163=0;while true do if (v163==0) then if (v91==(((2746 -1543) -(727 + ((239 + 1065) -828))) + ((0 + 0) -(0 -0)))) then if (v90==((3047 -(983 + 569)) -(((3314 -1604) -(1178 -(114 + 352))) + (1816 -(1325 + 322)) + 328))) then return v92 * (((1581 -866) -((530 -308) + 493)) + ((0 -0) -(0 -0))) ;else local v216=0 -0 ;local v217;local v218;while true do if (v216==(1 + 0)) then while true do if (v217==(1169 -(393 + 776))) then v218=96 -(94 + 2) ;while true do if (v218==(0 + (0 -0))) then v91=(2 -1) + (1870 -(150 + 1720)) + 0 + (513 -(233 + 280)) ;v89=0 + 0 ;break;end end break;end end break;end if (v216==0) then v217=1472 -(56 + 1416) ;v218=nil;v216=1557 -(372 + 1184) ;end end end elseif (v91==((2119 -(667 + 398)) + (1398 -(292 + 113)))) then return ((v90==(737 -(329 + 408))) and (v92 * ((1162 -(949 + 212))/((1186 -(248 + 425)) -((1444 -(412 + 839)) + 320))))) or (v92 * NaN) ;end return v17(v92,v91-(2699 -1676) ) * (v89 + (v90/((724 -(624 + 98))^(489 -((1043 -(402 + 478)) + (236 -154) + (2084 -(1009 + 883))))))) ;end end break;end end end if (v86==(1 + 0 + 0 + 0)) then local v164=0;while true do if (v164==(0 + 0)) then local v182=0;while true do if (v182==(1737 -(571 + 1166))) then v89=(1 -0) -0 ;v90=(v42(v88,1 + ((5873 -4651) -(11 + (1700 -489))) ,63 -(574 -(254 + 277)) ) * ((((2964 -(177 + 1298)) -857) -(((1081 -437) -((2004 -(986 + 927)) + ((2675 -(542 + 471)) -(1196 + 123)))) + (1064 -644)))^((((2220 -813) -(29 + 2)) -(545 + 62)) -(((1596 -((850 -502) + 404 + 308)) -(124 + 70 + 22 + 5 + 5 + 1)) + (1622 -1194))))) + v87 ;v182=1;end if (v182==1) then v164=4 -3 ;break;end end end if (v164==(2 -1)) then v86=2;break;end end end break;end if (v124==(0 + 0)) then if ((2 + 0)==v86) then local v165=1526 -(1260 + 266) ;local v166;while true do if (v165==(359 -(25 + 334))) then v166=0 + 0 ;while true do if (v166==(1923 -(1728 + 194))) then v86=1 + 1 + (4 -3) ;break;end if (v166==(1349 -(430 + 919))) then local v196=0;while true do if ((1 + 0)==v196) then v166=2 -1 ;break;end if ((0 -0)==v196) then v91=v42(v88,21,(1965 -(1776 + 183)) + (189 -(67 + 97)) );v92=((v42(v88,(656 -(483 + 143)) + (3 -2) + 0 + (422 -(335 + 86)) + (0 -0) )==(1477 -(((1321 -((906 -708) + (254 -102))) -((1115 -560) + (392 -100))) + ((7927 -4890) -1685)))) and  -((1 -0) + (226 -(88 + 138)) + 0 + (672 -(177 + 495)))) or (((1402 -(444 + 957)) + (335 -(41 + 292))) -(1890 -((2111 -(663 + 977)) + (2198 -781)))) ;v196=2 -1 ;end end end end break;end end end if (v86==((199 + 339) -(1 + 16 + 486 + 35))) then local v167=0 + 0 ;local v168;while true do if (v167==0) then v168=1343 -(1054 + 289) ;while true do if (v168==(1339 -(1205 + 134))) then v87=v45();v88=v45();v168=237 -(189 + 47) ;end if (v168==(2 -1)) then v86=(251 -(101 + 149)) + 0 + 0 ;break;end end break;end end end v124=1;end end end break;end if (v85==(2 + 0)) then local v118=191 -(50 + 141) ;while true do if (v118==(269 -(198 + 70))) then v85=3;break;end if (v118==(0 + 0)) then v90=nil;v91=nil;v118=2 -1 ;end end end if (v85==(1986 -(141 + 1844))) then local v119=0;while true do if (v119==(0 -0)) then v88=nil;v89=nil;v119=1 + 0 ;end if (v119==(958 -(591 + 366))) then v85=4 -2 ;break;end end end if ((1786 -(739 + 1047))==v85) then v86=(587 -(383 + 204)) + 0 ;v87=nil;v85=1 + 0 ;end end end;v47=nil;v74=1 + 0 ;end if (v74==2) then v39=4;break;end end end v66=1 + 0 ;end if ((776 -(190 + 585))==v66) then v64=2;break;end end end if ((322 -(15 + 305))==v64) then if (v39==(1207 -(65 + 1138))) then local v68=0 + 0 ;local v69;while true do if (v68==0) then v69=72 -(71 + 1) ;while true do if (v69==0) then local v79=542 -(91 + 451) ;while true do if (v79==0) then v49=nil;v49=function(...)return {...},v21("#",...);end;v79=1;end if (v79==(1288 -(479 + 808))) then v69=1;break;end end end if (v69==1) then v50=nil;v50=function()local v93=0 + 0 ;local v94;local v95;local v96;local v97;local v98;local v99;local v100;local v101;while true do if (v93==(1255 -(811 + 440))) then while true do if (v94==2) then local v134=0;while true do if (v134==(0 -0)) then v99=nil;v100=nil;v134=1494 -(1254 + 239) ;end if (v134==1) then v94=1 + 2 ;break;end end end if (v94==(0 -0)) then local v135=0 + 0 ;while true do if (v135==(1 -0)) then v94=1;break;end if (v135==(211 -(112 + 99))) then v95=0 + 0 ;v96=nil;v135=447 -(53 + 393) ;end end end if (v94==1) then local v136=0;while true do if (v136==(2 -1)) then v94=7 -5 ;break;end if (v136==(857 -(783 + 74))) then v97=nil;v98=nil;v136=1;end end end if ((11 -8)==v94) then v101=nil;while true do local v148=0 + 0 ;local v149;while true do if (v148==0) then v149=552 -(47 + 505) ;while true do if (v149==(0 + 0)) then local v184=0;while true do if (v184==0) then if (v95==3) then local v210=0;local v211;while true do if (v210==0) then v211=390 -(250 + 140) ;while true do local v226=0;while true do if (0==v226) then if (v211==0) then local v248=0;while true do if (v248==1) then v211=1310 -(448 + 861) ;break;end if (0==v248) then for v268=2 -((2 -1) -(1548 -(515 + 1033))) ,v45() do v97[v268-(1221 -(305 + 717 + 198)) ]=v50();end for v270=((4293 -(351 + 541)) -((1403 -(96 + 84)) + 639)) -(1176 + 362) ,v45() do v98[v270]=v45();end v248=2 -1 ;end end end if (v211==(3 -2)) then return v99;end break;end end end break;end end end if (v95==1) then local v212=0 -0 ;local v213;while true do if (v212==(0 + 0)) then v213=0 + 0 ;while true do if (v213==0) then v99={v96,v97,nil,v98};v100=v45();v213=268 -(200 + 67) ;end if (v213==(134 -(12 + 121))) then v101={};v95=2 + 0 ;break;end end break;end end end v184=1232 -(1107 + 124) ;end if (v184==(1506 -(1343 + 162))) then v149=718 -(405 + 312) ;break;end end end if (v149==1) then if (v95==0) then local v197=1637 -(137 + 1500) ;local v198;while true do if (0==v197) then v198=0 -0 ;while true do if (v198==(1 -0)) then v98={};v95=61 -(32 + 28) ;break;end if (v198==(1515 -(384 + 1131))) then v96={};v97={};v198=1 -0 ;end end break;end end end if (v95==2) then local v199=0 -0 ;local v200;while true do if (v199==0) then v200=770 -(368 + 402) ;while true do if (v200==(1 -0)) then for v227=(973 -((602 -361) + 40 + 205)) -((879 -516) + 57 + 66) ,v45() do local v228=0 -0 ;local v229;local v230;while true do if ((923 -(612 + 310))==v228) then while true do if (v229==0) then v230=v43();if (v42(v230,((122 + 316) -((691 -(30 + 586)) + (651 -(8 + 282)))) -1 ,((8202 -4893) -2203) -(79 + 371 + 170 + 485) )==((2740 -(589 + 304)) -((3372 -((519 -325) + 1452 + 128)) + (1121 -(749 + 192)) + 61 + 8))) then local v255=0 + 0 ;local v256;local v257;local v258;local v259;while true do if (v255==(1800 -(750 + 1049))) then local v273=674 -(646 + 28) ;while true do if (v273==1) then v255=9 -7 ;break;end if ((0 -0)==v273) then v258=nil;v259=nil;v273=841 -(127 + 713) ;end end end if (v255==2) then while true do if (v256==0) then local v278=0;local v279;while true do if (0==v278) then v279=0;while true do if (v279==1) then v256=377 -(362 + 14) ;break;end if (v279==(1982 -(401 + 1581))) then local v298=0 + 0 ;while true do if (v298==(0 -0)) then v257=v42(v230,1 + 1 ,((2 -1) -0) + (1876 -(411 + 1463)) );v258=v42(v230,1 + ((8 -4) -(1132 -(750 + 381))) ,(18 -(28 -16)) + 0 + 0 + 0 );v298=1;end if (v298==(1 + 0)) then v279=1;break;end end end end break;end end end if (v256==(1 + 0)) then local v280=1710 -(1524 + 186) ;local v281;while true do if (v280==(0 + 0)) then v281=0 + 0 ;while true do if (v281==(0 -0)) then v259={v44(),v44(),nil,nil};if (v257==((223 + 638) -(2 + 5 + 24 + 830))) then local v301=1409 -(1056 + 353) ;local v302;local v303;while true do if (v301==(964 -(295 + 668))) then while true do if ((0 + 0)==v302) then v303=0;while true do if (v303==(1382 -(1319 + 63))) then v259[1862 -(784 + (1357 -(157 + 125))) ]=v44();v259[(165 -(107 + 55)) + 1 + 0 ]=v44();break;end end break;end end break;end if (v301==0) then v302=0 -0 ;v303=nil;v301=1 + 0 ;end end elseif (v257==((1 -0) + 0 + (0 -0))) then v259[6 -3 ]=v45();elseif (v257==(2 + 0)) then v259[(2880 -((758 -127) + 623)) -((2824 -((1029 -647) + (1762 -600))) + (1738 -(809 + 893)) + 160 + 147) ]=v45() -((((2185 -(212 + 1723)) -(7 + 64 + (227 -(39 + 15)))) -4)^(((1931 -(966 + 855)) -(170 -110)) -((4 -1) + (1350 -(141 + 1178))))) ;elseif (v257==((455 -((1014 -738) + (1737 -(149 + 1411)))) + (3 -2))) then local v326=0 -0 ;local v327;local v328;while true do if (v326==0) then v327=0;v328=nil;v326=3 -2 ;end if (1==v326) then while true do if (v327==(0 + 0)) then v328=0;while true do if (v328==(0 + 0)) then v259[(1357 -(69 + 1285)) + (1498 -(653 + 845)) ]=v45() -(((4 -3) + 1 + 0)^((667 -(130 + 501)) -(300 -(38 + 242)))) ;v259[3 + (2 -1) + 0 + 0 ]=v44();break;end end break;end end break;end end end v281=436 -(29 + 406) ;end if (v281==1) then v256=2 + 0 ;break;end end break;end end end if (v256==(1 + 2)) then if (v42(v258,3,(4790 -3578) -(280 + 249 + ((3681 -1226) -1775)) )==(((936 -(42 + 13)) -(7 + 55 + (3345 -2528))) -(1 -0))) then v259[(3114 -1458) -(376 + 1276) ]=v101[v259[4]];end v96[v227]=v259;break;end if (v256==(1789 -(654 + 1133))) then local v283=0 + 0 ;local v284;while true do if (v283==(0 -0)) then v284=0 -0 ;while true do if (v284==(1453 -(1387 + 66))) then local v299=0;while true do if (v299==(3 -2)) then v284=852 -(310 + 541) ;break;end if (v299==(0 -0)) then if (v42(v258,1321 -(89 + 881 + ((689 + 6) -(46 + (1471 -(237 + 935))))) ,(335 -((968 -(628 + 309)) + (790 -490))) -(1310 -(1299 + (639 -(418 + 213)))) )==1) then v259[1 + 1 ]=v101[v259[(3 + 0) -(3 -2) ]];end if (v42(v258,159 -((405 -(12 + 330)) + 1 + (691 -(391 + 207))) ,(1289 + 650) -(1776 + (412 -251)) )==1) then v259[(5 -3) + 1 ]=v101[v259[2 + 1 ]];end v299=789 -(397 + 391) ;end end end if (v284==(19 -(16 + 2))) then v256=1365 -(990 + 372) ;break;end end break;end end end end break;end if (v255==(0 -0)) then local v274=0 -0 ;while true do if (v274==1) then v255=1 + 0 ;break;end if (v274==(1021 -(175 + 846))) then v256=1979 -(255 + 1724) ;v257=nil;v274=1536 -(302 + 1233) ;end end end end end break;end end break;end if ((0 -0)==v228) then local v235=698 -(114 + 584) ;while true do if (v235==(103 -(96 + 7))) then v229=0 + 0 ;v230=nil;v235=1 -0 ;end if ((1 -0)==v235) then v228=493 -(43 + 449) ;break;end end end end end v95=1 + 2 ;break;end if ((32 -(10 + 22))==v200) then local v222=0 -0 ;while true do if (v222==(0 + 0)) then for v236=(1642 -717) -((916 -531) + (1074 -535)) ,v100 do local v237=0 -0 ;local v238;local v239;local v240;local v241;while true do if (v237==(230 -(111 + 119))) then v238=0 -0 ;v239=nil;v237=1;end if ((1 + 0)==v237) then v240=nil;v241=nil;v237=1659 -(216 + 1441) ;end if (v237==2) then while true do if ((702 -(628 + 74))==v238) then local v272=0 + 0 ;while true do if (v272==0) then v239=0 + 0 ;v240=nil;v272=1786 -(1222 + 563) ;end if (v272==(1 + 0)) then v238=1;break;end end end if (v238==(1 + 0)) then v241=nil;while true do if (v239==1) then if (v240==((1 + 2) -2)) then v241=v43()~=(((238 + 702) -(645 + 248 + 47)) -0) ;elseif (v240==(703 -((1606 -1158) + (866 -613)))) then v241=v46();elseif (v240==(8 -5)) then v241=v47();end v101[v236]=v241;break;end if (v239==0) then local v276=1945 -(1097 + 848) ;local v277;while true do if (v276==(791 -(596 + 195))) then v277=1490 -(499 + 991) ;while true do if (v277==(0 -0)) then v240=v43();v241=nil;v277=4 -3 ;end if (v277==(1359 -(133 + 1225))) then v239=1 + 0 ;break;end end break;end end end end break;end end break;end end end v99[216 -((211 -140) + (1104 -(862 + 100))) ]=v43();v222=1 + 0 ;end if (v222==(1 + 0)) then v200=1;break;end end end end break;end end end break;end end break;end end end break;end end break;end if (2==v93) then v98=nil;v99=nil;v93=3;end if ((10 -7)==v93) then v100=nil;v101=nil;v93=4;end if (v93==0) then v94=961 -(763 + 198) ;v95=nil;v93=1;end if (v93==1) then v96=nil;v97=nil;v93=2;end end end;v69=1 + 1 ;end if (v69==(5 -3)) then v39=3 + 2 ;break;end end break;end end end if (v39==(1 -0)) then local v70=0;local v71;while true do if (v70==0) then v71=0;while true do if (v71==1) then local v80=0 + 0 ;while true do if (v80==(1 -0)) then v71=2;break;end if (v80==(0 + 0)) then v43=function()local v120=1078 -(185 + 893) ;local v121;local v122;local v123;while true do if ((0 + 0)==v120) then v121=0 + 0 ;v122=nil;v120=1;end if (v120==(1266 -(1090 + 175))) then v123=nil;while true do if (v121==1) then while true do local v172=0 -0 ;while true do if (v172==0) then if (v122==((0 -0) -(367 -(47 + 320)))) then local v201=0 -0 ;while true do if (v201==(1021 -(619 + 401))) then v122=2 -1 ;break;end if (v201==0) then local v214=0;while true do if (v214==(1179 -(922 + 257))) then v123=v10(v31,v40,v40);v40=v40 + (3 -2) + 0 ;v214=1531 -(1436 + 94) ;end if (v214==1) then v201=1 -0 ;break;end end end end end if (v122==(1 + 0 + 0)) then return v123;end break;end end end break;end if (v121==(0 + 0)) then v122=(556 -(234 + 322)) -0 ;v123=nil;v121=1 -0 ;end end break;end end end;v44=nil;v80=1 + 0 ;end end end if (v71==(271 -(121 + 148))) then v39=2;break;end if (v71==(1543 -(838 + 705))) then local v81=0;while true do if (v81==(0 + 0)) then v42=function(v103,v104,v105)if v105 then local v126=0;local v127;local v128;while true do if ((1 + 0)==v126) then while true do if (v127==(0 + (0 -0))) then local v179=0 + 0 ;local v180;while true do if (v179==(1961 -(98 + 1863))) then v180=0 -0 ;while true do if (v180==(0 -0)) then local v205=1853 -(1400 + 453) ;while true do if (v205==(0 + 0)) then v128=(v103/((140 -(48 + 59 + ((65 + 57) -(12 + 9 + (1623 -(146 + 1407))))))^(v104-((2988 -((2965 -1560) + (1755 -(473 + 696)))) -((885 -(24 + 710)) + 478 + 167 + 200)))))%(((694 -((1171 -838) + 284 + 70)) -(7 -(3 -1)))^(((v105-((2909 -1701) -(((1105 -(675 + 144)) -180) + 730 + 371))) -(v104-(((1739 -1159) + 656 + 41) -((716 -(366 + 89 + 167)) + (2903 -1721))))) + ((1 -0) -(359 -(315 + 44))))) ;return v128-(v128%(208 -(110 + 97))) ;end end end end break;end end end end break;end if (v126==(1804 -(1322 + 482))) then v127=1943 -(19 + 1924) ;v128=nil;v126=1 + 0 ;end end else local v129=0;local v130;local v131;local v132;while true do if (v129==(0 + 0)) then v130=0 -0 ;v131=nil;v129=1 + 0 ;end if ((3 -2)==v129) then v132=nil;while true do if ((1 + 0)==v130) then while true do if (v131==0) then local v187=0 + 0 ;local v188;while true do if (v187==(0 -0)) then v188=0 -0 ;while true do if (v188==(0 + 0)) then local v219=0 + 0 ;while true do if (v219==(0 + 0)) then v132=((507 + 1330) -(854 + ((4504 -(888 + 738)) -1897)))^(v104-((5 -((237 -(174 + 62)) + (690 -(517 + 171)))) -(((1 + 13) -11) -(2 + 0 + 0)))) ;return (((v103%(v132 + v132))>=v132) and ((((3431 + 4201) -3455) -3146) -((1963 -(143 + 1681)) + (2073 -1182)))) or ((0 -0) + 0 + 0) ;end end end end break;end end end end break;end if (v130==(0 + 0)) then local v181=0;while true do if ((1 + 0)==v181) then v130=1;break;end if (v181==0) then v131=0 + (0 -0) ;v132=nil;v181=820 -(133 + 686) ;end end end end break;end end end end;v43=nil;v81=1 + 0 ;end if (v81==(1913 -(353 + 1559))) then v71=1;break;end end end end break;end end end break;end if ((0 + 0)==v64) then local v67=0 + 0 ;while true do if (v67==(1 + 0)) then v64=1 + 0 ;break;end if (v67==(812 -(33 + 779))) then if (v39==(93 -(7 + 86))) then local v75=0 + 0 ;while true do if (v75==(0 + 0)) then local v82=0;while true do if (v82==0) then v40=(1 -(1200 -(85 + 1115))) + 0 ;v41=nil;v82=1 + 0 ;end if ((1737 -(622 + 1114))==v82) then v75=1;break;end end end if ((1 + 0)==v75) then v31=v13(v12(v31,(14 + 0) -(35 -26) ),v8("\84\119","\122\89\160\142\107\163\177\156"),function(v83)if (v10(v83,2 + 0 )==((432 -233) -120)) then local v106=0 -0 ;local v107;while true do if (v106==0) then v107=0 + 0 ;while true do if (v107==(0 -0)) then local v153=239 -(165 + 74) ;local v154;while true do if (v153==(0 -0)) then v154=0;while true do if (v154==0) then local v189=0;while true do if ((0 -0)==v189) then v41=v9(v12(v83,((983 + 352) -((294 -168) + 1207)) -((1 + 0) -(0 + 0)) ,(29 + 157) -((1218 -(248 + 860)) + (238 -163)) ));return "";end end end end break;end end end end break;end end else local v108=0 + 0 ;local v109;local v110;while true do if (v108==(1 + 0)) then while true do if ((0 + 0)==v109) then v110=v11(v9(v83,(1692 -(1158 + 512)) -(1474 -(1372 + 96)) ));if v41 then local v173=0 -0 ;local v174;local v175;local v176;while true do if (v173==1) then v176=nil;while true do if (v174==0) then local v204=1049 -(263 + 786) ;while true do if (v204==(2 -1)) then v174=632 -(185 + 446) ;break;end if ((0 -0)==v204) then v175=0 + 0 ;v176=nil;v204=1 + 0 ;end end end if (v174==1) then while true do local v206=293 -(147 + 146) ;local v207;while true do if (v206==(0 -0)) then v207=0;while true do if (v207==(0 -0)) then if (v175==(1 + 0)) then return v176;end if ((1569 -(331 + 1238))==v175) then local v242=0 -0 ;local v243;while true do if (v242==(0 -0)) then v243=0;while true do if (v243==(0 + 0)) then v176=v14(v110,v41);v41=nil;v243=1;end if ((1 + 0)==v243) then v175=1 + 0 ;break;end end break;end end end break;end end break;end end end break;end end break;end if (v173==0) then v174=181 -(135 + 46) ;v175=nil;v173=1;end end else return v110;end break;end end break;end if (v108==(0 + 0)) then local v133=0 -0 ;while true do if ((1 + 0)==v133) then v108=1 + 0 ;break;end if (v133==(0 -0)) then v109=0 + 0 ;v110=nil;v133=1 -0 ;end end end end end end);v42=nil;v75=341 -(193 + 146) ;end if (v75==(4 -2)) then v39=1;break;end end end if (2==v39) then local v76=0 + 0 ;local v77;while true do if (v76==0) then v77=1464 -(970 + 494) ;while true do if (v77==(1954 -(124 + 1829))) then local v111=0 -0 ;while true do if (v111==(1 + 0)) then v77=5 -3 ;break;end if (v111==(1824 -(1784 + 40))) then v45=function()local v137=0 + 0 ;local v138;local v139;local v140;local v141;local v142;while true do if (v137==(1798 -(1678 + 119))) then local v169=0;while true do if (v169==(1872 -(1616 + 256))) then v140=nil;v141=nil;v169=1 + 0 ;end if (v169==(3 -2)) then v137=1 + 1 ;break;end end end if (v137==(0 + 0)) then local v170=0 -0 ;while true do if (v170==(0 -0)) then v138=0;v139=nil;v170=453 -(150 + 302) ;end if (v170==(1 + 0)) then v137=1;break;end end end if (v137==2) then v142=nil;while true do local v177=0;local v178;while true do if ((0 + 0)==v177) then v178=0;while true do if (v178==(1111 -(1053 + 58))) then if (v138==(1260 -(674 + 585))) then return (v142 * ((8600459 -2621076) + 10797833)) + (v141 * ((13116 -(104 + 986)) + 343 + 53167)) + (v140 * ((2839 -(530 + 188)) -(1272 + 131 + (864 -(85 + 317))))) + v139 ;end if (v138==(0 + (1993 -(331 + 1662)))) then local v215=40 -(22 + 18) ;while true do if (v215==(0 + 0)) then local v223=0;while true do if (0==v223) then v139,v140,v141,v142=v10(v31,v40,v40 + 3 );v40=v40 + 3 + 1 ;v223=1;end if (v223==(1 -0)) then v215=553 -(305 + 247) ;break;end end end if (v215==(1085 -(530 + 554))) then v138=(737 -(350 + 386)) + 0 ;break;end end end break;end end break;end end end break;end end end;v46=nil;v111=1 + 0 ;end end end if (v77==(3 -1)) then v39=3;break;end if (v77==(779 -(208 + 571))) then local v112=0 + 0 ;while true do if ((0 + 0)==v112) then v44=function()local v143=0 + 0 ;local v144;local v145;local v146;local v147;while true do if (v143==(1605 -(688 + 915))) then while true do if ((1540 -(984 + 555))==v144) then v147=nil;while true do local v185=0 -0 ;local v186;while true do if ((0 + 0)==v185) then v186=0 -0 ;while true do if (v186==0) then if (v145==((1694 -(6 + 210)) -(1454 + 11 + (1109 -(267 + 829))))) then local v224=0 -0 ;local v225;while true do if (v224==(0 -0)) then v225=0 + 0 ;while true do if (v225==1) then v145=623 -(34 + 588) ;break;end if (v225==0) then local v249=0 + 0 ;while true do if (v249==(1 -0)) then v225=1 -0 ;break;end if (v249==(1178 -(1165 + 13))) then v146,v147=v10(v31,v40,v40 + ((406 -((101 -43) + (1786 -(936 + 822)) + (626 -417) + (1734 -(1152 + 474)))) -(1107 -(653 + 453))) );v40=v40 + (1366 -(182 + 431 + 751)) + (928 -(52 + 876)) ;v249=1;end end end end break;end end end if (v145==(1504 -(4 + 1026 + 473))) then return (v147 * ((651 -(507 -(282 + 63))) -(843 -(281 + 329)))) + v146 ;end break;end end break;end end end break;end if ((1274 -(200 + 1074))==v144) then v145=0;v146=nil;v144=1549 -(263 + 1285) ;end end break;end if (v143==1) then v146=nil;v147=nil;v143=2 -0 ;end if (v143==(0 + 0)) then v144=0 -0 ;v145=nil;v143=1;end end end;v45=nil;v112=1;end if (v112==1) then v77=738 -(484 + 253) ;break;end end end end break;end end end v67=3 -2 ;end end end end break;end end end break;end if (v38==0) then local v60=0 -0 ;while true do if (2==v60) then v38=1 + 0 ;break;end if (v60==1) then v41=nil;v42=nil;v60=5 -3 ;end if ((1909 -(1345 + 564))==v60) then v39=0 + 0 ;v40=nil;v60=1;end end end if (1==v38) then local v61=0;while true do if (v61==(0 -0)) then v43=nil;v44=nil;v61=554 -(178 + 375) ;end if (v61==(1 + 0)) then v45=nil;v46=nil;v61=2 -0 ;end if (v61==(1 + 1)) then v38=2 -0 ;break;end end end if (v38==(1250 -(453 + 795))) then v47=nil;v48=nil;v49=nil;v50=nil;v38=3;end end break;end if (v37==(2 + 0)) then v44=nil;v45=nil;v46=nil;v37=3;end if (v37==0) then v38=0 -0 ;v39=nil;v40=nil;v37=1 + 0 ;end end end;vv18(),...);break;end if (v25==(979 -(402 + 574))) then local v33=0 -0 ;while true do if (v33==1) then v11=_G[v8("\245\236\57\93\74\43","\134\152\75\52\36\76\142\105")][v8("\191\198\174\154","\220\174\207\232\224\167")];v25=4;break;end if (v33==(0 -0)) then v9=_G[v8("\101\170\83\14\51\203\35\243","\17\197\61\123\94\169\70\129")];v10=_G[v8("\221\84\5\46\45\201","\174\32\119\71\67")][v8("\206\104\233\45","\172\17\157\72\110")];v33=1 + 0 ;end end end if (v25==(2 -0)) then v7=table.insert;v8=nil;v8=function(v35,v36)local v52=0 -0 ;local v53;while true do local v54=1902 -(96 + 1806) ;while true do if (v54==(310 -(172 + 138))) then if (v52==(1 + 0)) then return v6(v53);end if (0==v52) then local v62=0;while true do if ((247 -(77 + 169))==v62) then v52=1939 -(352 + 1586) ;break;end if (0==v62) then v53={};for v65=1 -0 , #v35 do v7(v53,v1(v5(v2(v3(v35,v65,v65 + (147 -(53 + 93)) )),v2(v3(v36,1 + 0 + ((v65-(1 + 0))% #v36) ,1 + ((v65-1)% #v36) + 1 + 0 )))%(223 + 33) ));end v62=1 -0 ;end end end break;end end end end;v25=7 -4 ;end end break;end if (v0==(1981 -(1919 + 58))) then v17=nil;v18=nil;v19=nil;v20=nil;v0=2 + 3 ;end if (v0==(2 + 0)) then v9=nil;v10=nil;v11=nil;v12=nil;v0=3;end if (v0==(560 -(355 + 205))) then v1=nil;v2=nil;v3=nil;v4=nil;v0=1;end end end