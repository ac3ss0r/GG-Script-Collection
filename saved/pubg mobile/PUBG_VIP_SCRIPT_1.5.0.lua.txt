gg.setVisible(false)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 .")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ..")
gg.sleep(100)
gg.toast("𝚃𝙷𝙴 𝙶𝙰𝙼𝙴 𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂 𝙻𝙾𝙰𝙳𝙸𝙽𝙶 ...")
gg.sleep(100)

function SearchWrite(Search, Write, Type)
	gg.clearResults()
	gg.setVisible(false)
	gg.searchNumber(Search[1][1], Type)
	local count = gg.getResultCount()
	local result = gg.getResults(count)
	gg.clearResults()
	local data = {}
	local base = Search[1][2]
	if count > 0 then
		for i, v in ipairs(result) do
			v.isUseful = true
		end
		for k = 2, #Search do
			local tmp = {}
			local offset = Search[k][2] - base
			local num = Search[k][1]
			for i, v in ipairs(result) do
				tmp[#tmp + 1] = {}
				tmp[#tmp].address = v.address + offset
				tmp[#tmp].flags = v.flags
			end
			tmp = gg.getValues(tmp)
			for i, v in ipairs(tmp) do
				if tostring(v.value) ~= tostring(num) then
					result[i].isUseful = false
				end
			end
		end
		for i, v in ipairs(result) do
			if v.isUseful then
				data[#data + 1] = v.address
			end
		end
		if #data > 0 then
			gg.toast(Name .. "  修改" .. #data .. "条数据")
			local t = {}
			local base = Search[1][2]
			for i = 1, #data do
				for k, w in ipairs(Write) do
					offset = w[2] - base
					t[#t + 1] = {}
					t[#t].address = data[i] + offset
					t[#t].flags = Type
					t[#t].value = w[1]
					if w[3] == true then
						local item = {}
						item[#item + 1] = t[#t]
						item[#item].freeze = true
						gg.addListItems(item)
					end
				end
			end
			gg.setValues(t)
		else
			gg.toast(Name .. "   开启失败", false)
			return false
		end
	else
		gg.toast(Name .. "   开启失败")
		return false
	end
end
function split(szFullString, szSeparator)
	local nFindStartIndex = 1
	local nSplitIndex = 1
	local nSplitArray = {}
	while true do
		local nFindLastIndex = string.find(szFullString, szSeparator, nFindStartIndex)
		if not nFindLastIndex then
			nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len(szFullString))
			break
		end
		nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, nFindLastIndex - 1)
		nFindStartIndex = nFindLastIndex + string.len(szSeparator)
		nSplitIndex = nSplitIndex + 1
	end
	return nSplitArray
end
function xgxc(szpy, qmxg)
	for x = 1, #qmxg do
		xgpy = szpy + qmxg[x]["offset"]
		xglx = qmxg[x]["type"]
		xgsz = qmxg[x]["value"]
		gg.setValues({ [1] = { address = xgpy, flags = xglx, value = xgsz } })
		xgsl = xgsl + 1
	end
end
function xqmnb(qmnb)
	gg.clearResults()
	gg.setRanges(qmnb[1]["memory"])
	gg.searchNumber(qmnb[3]["value"], qmnb[3]["type"])
	if gg.getResultCount() == 0 then
		gg.toast(qmnb[2]["name"] .. "开启失败")
	else
		gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"])
		gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"])
		gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"])
		if gg.getResultCount() == 0 then
			gg.toast(qmnb[2]["name"] .. "开启失败")
		else
			sl = gg.getResults(999999)
			sz = gg.getResultCount()
			xgsl = 0
			if sz > 999999 then
				sz = 999999
			end
			for i = 1, sz do
				pdsz = true
				for v = 4, #qmnb do
					if pdsz == true then
						pysz = {}
						pysz[1] = {}
						pysz[1].address = sl[i].address + qmnb[v]["offset"]
						pysz[1].flags = qmnb[v]["type"]
						szpy = gg.getValues(pysz)
						pdpd = qmnb[v]["lv"] .. ";" .. szpy[1].value
						szpd = split(pdpd, ";")
						tzszpd = szpd[1]
						pyszpd = szpd[2]
						if tzszpd == pyszpd then
							pdjg = true
							pdsz = true
						else
							pdjg = false
							pdsz = false
						end
					end
				end
				if pdjg == true then
					szpy = sl[i].address
					xgxc(szpy, qmxg)
					xgjg = true
				end
			end
			if xgjg == true then
				gg.toast(qmnb[2]["name"] .. "笑颜提醒:开启成功,共修改" .. xgsl .. "条ΔΘ")
			else
				gg.toast(qmnb[2]["name"] .. "笑颜提醒:开启失败")
			end
		end
	end
end
function PS() end
function setvalue(address, flags, value)
	PS("修改地址数值(地址,数值类型,要修改的值)")
	local tt = {}
	tt[1] = {}
	tt[1].address = address
	tt[1].flags = flags
	tt[1].value = value
	gg.setValues(tt)
end
function setvalue(a, b, c)
	gg.setValues({ [1] = { address = a, flags = b, freeze = true, value = c } })
end
function PS() end
function setvalue(address, flags, value)
	PS("修改地址数值(地址,数值类型,要修改的值)")
	local tt = {}
	tt[1] = {}
	tt[1].address = address
	tt[1].flags = flags
	tt[1].value = value
	gg.setValues(tt)
end

function readAdd(add)
	t = gg.getValues({ [1] = { address = add, flags = 4 } })
	add = string.format("%X", t[1].value)
	if #add == 16 then
		add = add:sub(9, 16)
	end
	if #add == 1 then
		add = add .. "0000000"
	else
		add = string.format("%d", "0x" .. add)
	end
	return add
end
function split(szFullString, szSeparator)
	local nFindStartIndex = 1
	local nSplitIndex = 1
	local nSplitArray = {}
	while true do
		local nFindLastIndex = string.find(szFullString, szSeparator, nFindStartIndex)
		if not nFindLastIndex then
			nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len(szFullString))
			break
		end
		nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, nFindLastIndex - 1)
		nFindStartIndex = nFindLastIndex + string.len(szSeparator)
		nSplitIndex = nSplitIndex + 1
	end
	return nSplitArray
end
function xgxc(szpy, qmxg)
	for x = 1, #qmxg do
		xgpy = szpy + qmxg[x]["offset"]
		xglx = qmxg[x]["type"]
		xgsz = qmxg[x]["value"]
		gg.setValues({ [1] = { address = xgpy, flags = xglx, value = xgsz } })
		xgsl = xgsl + 1
	end
end
function xqmnb(qmnb)
	gg.clearResults()
	gg.setRanges(qmnb[1]["memory"])
	gg.searchNumber(qmnb[3]["value"], qmnb[3]["type"])
	if gg.getResultCount() == 0 then
		gg.toast(qmnb[2]["name"] .. "开启失败")
	else
		gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"])
		gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"])
		gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"])
		if gg.getResultCount() == 0 then
			gg.toast(qmnb[2]["name"] .. "开启失败")
		else
			sl = gg.getResults(999999)
			sz = gg.getResultCount()
			xgsl = 0
			if sz > 999999 then
				sz = 999999
			end
			for i = 1, sz do
				pdsz = true
				for v = 4, #qmnb do
					if pdsz == true then
						pysz = {}
						pysz[1] = {}
						pysz[1].address = sl[i].address + qmnb[v]["offset"]
						pysz[1].flags = qmnb[v]["type"]
						szpy = gg.getValues(pysz)
						pdpd = qmnb[v]["lv"] .. ";" .. szpy[1].value
						szpd = split(pdpd, ";")
						tzszpd = szpd[1]
						pyszpd = szpd[2]
						if tzszpd == pyszpd then
							pdjg = true
							pdsz = true
						else
							pdjg = false
							pdsz = false
						end
					end
				end
				if pdjg == true then
					szpy = sl[i].address
					xgxc(szpy, qmxg)
					xgjg = true
				end
			end
			if xgjg == true then
				gg.toast(qmnb[2]["name"] .. "开启成功,共修改" .. xgsl .. "条数据")
			else
				gg.toast(qmnb[2]["name"] .. "开启失败")
			end
		end
	end
end
function split(szFullString, szSeparator)
	local nFindStartIndex = 1
	local nSplitIndex = 1
	local nSplitArray = {}
	while true do
		local nFindLastIndex = string.find(szFullString, szSeparator, nFindStartIndex)
		if not nFindLastIndex then
			nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len(szFullString))
			break
		end
		nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, nFindLastIndex - 1)
		nFindStartIndex = nFindLastIndex + string.len(szSeparator)
		nSplitIndex = nSplitIndex + 1
	end
	return nSplitArray
end
function xgxc(szpy, qmxg)
	for x = 1, #qmxg do
		xgpy = szpy + qmxg[x]["offset"]
		xglx = qmxg[x]["type"]
		xgsz = qmxg[x]["value"]
		gg.setValues({ [1] = { address = xgpy, flags = xglx, value = xgsz } })
		xgsl = xgsl + 1
	end
end
function xqmnb(qmnb)
	gg.clearResults()
	gg.setRanges(qmnb[1]["memory"])
	gg.searchNumber(qmnb[3]["value"], qmnb[3]["type"])
	if gg.getResultCount() == 0 then
		gg.toast(qmnb[2]["name"] .. "开启失败")
	else
		gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"])
		gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"])
		gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"])
		if gg.getResultCount() == 0 then
			gg.toast(qmnb[2]["name"] .. "开启失败")
		else
			sl = gg.getResults(999999)
			sz = gg.getResultCount()
			xgsl = 0
			if sz > 999999 then
				sz = 999999
			end
			for i = 1, sz do
				pdsz = true
				for v = 4, #qmnb do
					if pdsz == true then
						pysz = {}
						pysz[1] = {}
						pysz[1].address = sl[i].address + qmnb[v]["offset"]
						pysz[1].flags = qmnb[v]["type"]
						szpy = gg.getValues(pysz)
						pdpd = qmnb[v]["lv"] .. ";" .. szpy[1].value
						szpd = split(pdpd, ";")
						tzszpd = szpd[1]
						pyszpd = szpd[2]
						if tzszpd == pyszpd then
							pdjg = true
							pdsz = true
						else
							pdjg = false
							pdsz = false
						end
					end
				end
				if pdjg == true then
					szpy = sl[i].address
					xgxc(szpy, qmxg)
					xgjg = true
				end
			end
			if xgjg == true then
				gg.toast(qmnb[2]["name"] .. "开启成功,共修改" .. xgsl .. "条数据")
			else
				gg.toast(qmnb[2]["name"] .. "开启失败")
			end
		end
	end
end
--配置↑↑↑勿修改，调用方法   xqmnb(qmnb)
function split(szFullString, szSeparator)
	local nFindStartIndex = 1
	local nSplitIndex = 1
	local nSplitArray = {}
	while true do
		local nFindLastIndex = string.find(szFullString, szSeparator, nFindStartIndex)
		if not nFindLastIndex then
			nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len(szFullString))
			break
		end
		nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, nFindLastIndex - 1)
		nFindStartIndex = nFindLastIndex + string.len(szSeparator)
		nSplitIndex = nSplitIndex + 1
	end
	return nSplitArray
end
function xgxc(szpy, Loading1)
	for x = 1, #Loading1 do
		xgpy = szpy + Loading1[x]["address"]
		xglx = Loading1[x]["flags"]
		xgsz = Loading1[x]["value"]
		xgdj = Loading1[x]["freeze"]
		if xgdj == nil or xgdj == "" then
			gg.setValues({ [1] = { address = xgpy, flags = xglx, value = xgsz } })
		else
			gg.addListItems({ [1] = { address = xgpy, flags = xglx, freeze = xgdj, value = xgsz } })
		end
		xgsl = xgsl + 1
		xgjg = true
	end
end
function LoadingQ(Loading)
	gg.setRanges(Loading[1]["memory"])
	gg.searchNumber(Loading[3]["value"], Loading[3]["flags"])
	if gg.getResultCount() == 0 then
		gg.toast(Loading[2]["Projects"] .. "Load失败❌")
	else
		gg.refineNumber(Loading[3]["value"], Loading[3]["flags"])
		gg.refineNumber(Loading[3]["value"], Loading[3]["flags"])
		gg.refineNumber(Loading[3]["value"], Loading[3]["flags"])
		if gg.getResultCount() == 0 then
			gg.toast(Loading[2]["Projects"] .. "Load失败❌")
		else
			sl = gg.getResults(999999)
			sz = gg.getResultCount()
			xgsl = 0
			if sz > 999999 then
				sz = 999999
			end
			for i = 1, sz do
				pdsz = true
				for v = 4, #Loading do
					if pdsz == true then
						pysz = {}
						pysz[1] = {}
						pysz[1].address = sl[i].address + Loading[v]["address"]
						pysz[1].flags = Loading[v]["flags"]
						szpy = gg.getValues(pysz)
						pdpd = Loading[v]["lv"] .. ";" .. szpy[1].value
						szpd = split(pdpd, ";")
						tzszpd = szpd[1]
						pyszpd = szpd[2]
						if tzszpd == pyszpd then
							pdjg = true
							pdsz = true
						else
							pdjg = false
							pdsz = false
						end
					end
				end
				if pdjg == true then
					szpy = sl[i].address
					xgxc(szpy, Loading1)
				end
			end
			if xgjg == true then
			end
		end
	end
end
function edit(orig, ret)
	_om = orig[1].memory or orig[1][1]
	_ov = orig[3].value or orig[3][1]
	_on = orig[2].name or orig[2][1]
	gg.clearResults()
	gg.setRanges(_om)
	gg.searchNumber(_ov, orig[3].type or orig[3][2])
	sz = gg.getResultCount()
	if sz < 1 then
		gg.toast(_on .. " 开启失败")
	else
		sl = gg.getResults(50000)
		for i = 1, sz do
			ist = true
			for v = 4, #orig do
				if ist == true and sl[i].value == _ov then
					cd = { {} }
					cd[1].address = sl[i].address + (orig[v].offset or orig[v][2])
					cd[1].flags = orig[v].type or orig[v][3]
					szpy = gg.getValues(cd)
					cdlv = orig[v].lv or orig[v][1]
					cdv = szpy[1].value
					if cdlv == cdv then
						pdjg = true
						ist = true
					else
						pdjg = false
						ist = false
					end
				end
			end
			if pdjg == true then
				szpy = sl[i].address
				for x = 1, #ret do
					xgpy = szpy + (ret[x].offset or ret[x][2])
					xglx = ret[x].type or ret[x][3]
					xgsz = ret[x].value or ret[x][1]
					xgdj = ret[x].freeze or ret[x][4]
					xgsj = { { address = xgpy, flags = xglx, value = xgsz } }
					if xgdj == true then
						xgsj[1].freeze = xgdj
						gg.addListItems(xgsj)
					else
						gg.setValues(xgsj)
					end
				end
				xgjg = true
			end
		end
		if xgjg == true then
			gg.toast(_on .. " 开启成功")
		else
			gg.toast(_on .. " 开启失败")
		end
	end
end
local app = {}
--设置搜索模式
app.memorySearchMode = function(MEMORY)
	if MEMORY == 2 then
		gg.setRanges(
			gg.REGION_JAVA_HEAP
				| gg.REGION_C_HEAP
				| gg.REGION_C_ALLOC
				| gg.REGION_C_DATA
				| gg.REGION_C_BSS
				| gg.REGION_PPSSPP
		)
	end
	if MEMORY == -1 then
		gg.setRanges(gg.REGION_VIDEO)
	end
	if MEMORY == -2 then
		gg.setRanges(gg.REGION_JAVA | gg.REGION_CODE_SYS)
	end
	if MEMORY == 0 then
		gg.setRanges(gg.REGION_ANONYMOUS)
	end
end
function checkType(dataType)
	local type
	if dataType == "D" or dataType == "D" then
		type = gg.TYPE_DWORD
	end
	if dataType == "F" then
		type = gg.TYPE_FLOAT
	end
	if dataType == "E" then
		type = gg.TYPE_DOUBLE
	end
	if dataType == "B" or dataType == "B" then
		type = gg.TYPE_BYTE
	end
	if dataType == "W" or dataType == "W" then
		type = gg.TYPE_WORD
		os.exit()
	end
	return type
end
app.memorySearch = function(pkgName, isNewSearch, address, tb, dataType)
	gg.clearResults()
	gg.setVisible(false)
	local isSucess = gg.searchNumber(tb[1]["lv"], checkType(dataType), false, gg.SIGN_EQUAL, address, -1)
	local t = gg.getResults(9999)
	local tab = {}
	local data = {}
	for i = 1, #t do
		for j = 2, #tb do
			tab[j] = {}
			tab[j].address = t[i].address + tb[j]["offset"]
			if tb[j]["type"] == nil then
				tab[j].flags = t[i].flags
			else
				tab[j].flags = checkType(tb[j]["type"])
			end
			tab = gg.getValues(tab)
			if tab[j].value == tb[j]["lv"] then
				data[#data + 1] = t[i].address
			end
		end
	end
	gg.clearResults()
	return isSucess, data
end
app.memoryWrite = function(pkgName, address, value, dataType)
	gg.setVisible(false)
	local t = {}
	t[1] = {}
	t[1].address = address
	t[1].flags = checkType(dataType)
	t[1].value = value
	return gg.setValues(t)
end

GG = { Read, Write }
function GG.ReadWrite(Read, Writw)
	TZ = {}
	dataTZ = Read[1]
	offset = dataTZ[2]
	for i = 1, #Read do
		TZA = Read[i]
		LV = { ["lv"] = TZA[1], ["offset"] = TZA[2] - offset }
		table.insert(TZ, i, LV)
	end
	app.memorySearchMode(Memory)
	isSuuess, TUG = app.memorySearch(pkgName, true, 0, TZ, Type)
	if TUG[1] == nil then
	else
		for ii = 1, #TUG do
			for iii = 1, #Write do
				dataxg = Write[iii]
				value = dataxg[1]
				Deviant = dataxg[2]
				app.memoryWrite(pkgName, TUG[ii] + Deviant - offset, value, Type)
			end
		end
		gg.toast(ID .. "开启成功")
	end
end
function SearchWrite(Search, Write, Type)
	gg.clearResults()
	gg.setVisible(false)
	gg.searchNumber(Search[1][1], Type)
	local t = gg.getResults(9999)
	gg.clearResults()
	if t ~= nil then
		local r = {}
		for j = 2, #Search do
			for i, v in ipairs(t) do
				r[i] = {}
				r[i].address = v.address + Search[j][2] - Search[1][2]
				r[i].flags = v.flags
			end
			r = gg.getValues(r)
			for i = #t, 1, -1 do
				if tostring(r[i].value) ~= tostring(Search[j][1]) then
					table.remove(t, i)
					table.remove(r, i)
				end
			end
		end
		--写入数据
		local r = {}
		for i = 1, #t do
			for j = 1, #Write do
				r[#r + 1] = {}
				r[#r].address = t[i].address + Write[j][2] - Search[1][2]
				r[#r].flags = t[i].flags
				r[#r].value = Write[j][1]
				r[#r].freeze = true --冻结的话修改后面加false
			end
		end
		gg.setValues(r)
	end
end

function SearchWrite(Search, Write, Type)
	gg.clearResults()
	gg.setVisible(false)
	gg.searchNumber(Search[1][1], Type)
	local count = gg.getResultCount()
	local result = gg.getResults(count)
	gg.clearResults()
	local data = {}
	local base = Search[1][2]
	if count > 0 then
		for i, v in ipairs(result) do
			v.isUseful = true
		end
		for k = 2, #Search do
			local tmp = {}
			local offset = Search[k][2] - base
			local num = Search[k][1]
			for i, v in ipairs(result) do
				tmp[#tmp + 1] = {}
				tmp[#tmp].address = v.address + offset
				tmp[#tmp].flags = v.flags
			end
			tmp = gg.getValues(tmp)
			for i, v in ipairs(tmp) do
				if tostring(v.value) ~= tostring(num) then
					result[i].isUseful = false
				end
			end
		end
		for i, v in ipairs(result) do
			if v.isUseful then
				data[#data + 1] = v.address
			end
		end
		if #data > 0 then
			gg.toast("🕹:修改" .. #data .. "条数据.开启成功")
			local t = {}
			local base = Search[1][2]
			for i = 1, #data do
				for k, w in ipairs(Write) do
					offset = w[2] - base
					t[#t + 1] = {}
					t[#t].address = data[i] + offset
					t[#t].flags = Type
					t[#t].value = w[1]
					if w[3] == true then
						local item = {}
						item[#item + 1] = t[#t]
						item[#item].freeze = true
						gg.addListItems(item)
					end
				end
			end
			gg.setValues(t)
		else
			gg.toast("🕹:搜索0条数据.修改失败", false)
			return false
		end
	else
		gg.toast("🕹:搜索0条数据.修改失败")
		return false
	end
end

function split(szFullString, szSeparator)
	local nFindStartIndex = 1
	local nSplitIndex = 1
	local nSplitArray = {}
	while true do
		local nFindLastIndex = string.find(szFullString, szSeparator, nFindStartIndex)
		if not nFindLastIndex then
			nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len(szFullString))
			break
		end
		nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, nFindLastIndex - 1)
		nFindStartIndex = nFindLastIndex + string.len(szSeparator)
		nSplitIndex = nSplitIndex + 1
	end
	return nSplitArray
end
function xgxc(szpy, qmxg)
	for x = 1, #qmxg do
		xgpy = szpy + qmxg[x]["offset"]
		xglx = qmxg[x]["type"]
		xgsz = qmxg[x]["value"]
		xgdj = qmxg[x]["freeze"]
		if xgdj == nil or xgdj == "" then
			gg.setValues({ [1] = { address = xgpy, flags = xglx, value = xgsz } })
		else
			gg.addListItems({ [1] = { address = xgpy, flags = xglx, freeze = xgdj, value = xgsz } })
		end
		xgsl = xgsl + 1
		xgjg = true
	end
end
function xqmnb(qmnb)
	gg.clearResults()
	gg.setRanges(qmnb[1]["memory"])
	gg.searchNumber(qmnb[3]["value"], qmnb[3]["type"])
	if gg.getResultCount() == 0 then
		gg.toast(qmnb[2]["name"] .. "开启失败")
	else
		gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"])
		gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"])
		gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"])
		if gg.getResultCount() == 0 then
			gg.toast(qmnb[2]["name"] .. "开启失败")
		else
			sl = gg.getResults(999999)
			sz = gg.getResultCount()
			xgsl = 0
			if sz > 999999 then
				sz = 999999
			end
			for i = 1, sz do
				pdsz = true
				for v = 4, #qmnb do
					if pdsz == true then
						pysz = {}
						pysz[1] = {}
						pysz[1].address = sl[i].address + qmnb[v]["offset"]
						pysz[1].flags = qmnb[v]["type"]
						szpy = gg.getValues(pysz)
						pdpd = qmnb[v]["lv"] .. ";" .. szpy[1].value
						szpd = split(pdpd, ";")
						tzszpd = szpd[1]
						pyszpd = szpd[2]
						if tzszpd == pyszpd then
							pdjg = true
							pdsz = true
						else
							pdjg = false
							pdsz = false
						end
					end
				end
				if pdjg == true then
					szpy = sl[i].address
					xgxc(szpy, qmxg)
				end
			end
			if xgjg == true then
				gg.toast(qmnb[2]["name"] .. "开启成功,共修改" .. xgsl .. "条数据")
			else
				gg.toast(qmnb[2]["name"] .. "开启失败")
			end
		end
	end
end
local app = {}
function Assert(data)
	if data == nil or data == "" or data == "nil" then
		return false
	else
		return true
	end
end
function mearrass(memory, array)
	if Assert(memory) and Assert(array) then
		return true
	else
		return false
	end
end
function typetab(array, type)
	local datatype = {}
	for i = 1, #array do
		if Assert(array[i].type) then
			table.insert(datatype, i, array[i].type)
		else
			if Assert(type) then
				table.insert(datatype, i, type)
			else
				return false
			end
		end
	end
	return true, datatype
end
function app.memorysearch(memory, array, type)
	gg.setVisible(false)
	local rx = mearrass(memory, array)
	if rx then
		local rx, datatype = typetab(array, type)
		if rx then
			if Assert(array[1].hv) then
				gg.clearResults()
				gg.setRanges(memory)
				gg.searchNumber(array[1].lv .. "~" .. array[1].hv, datatype[1])
			else
				gg.clearResults()
				gg.setRanges(memory)
				gg.searchNumber(array[1].lv, datatype[1])
			end
			if gg.getResultCount() == 0 then
				return false
			else
				local tab = {}
				local data = gg.getResults(gg.getResultCount())
				gg.clearResults()
				for i = 1, #data do
					data[i].rx = true
				end
				for i = 2, #array do
					local t = {}
					local offset = array[i].offset
					for x = 1, #data do
						t[#t + 1] = {}
						t[#t].address = data[x].address + offset
						t[#t].flags = datatype[i]
					end
					local t = gg.getValues(t)
					for z = 1, #t do
						if Assert(array[i].hv) then
							if
								tonumber(t[z].value) < tonumber(array[i].lv)
								or tonumber(t[z].value) > tonumber(array[i].hv)
							then
								data[z].rx = false
							end
						else
							if tostring(t[z].value) ~= tostring(array[i].lv) then
								data[z].rx = false
							end
						end
					end
				end
				for i = 1, #data do
					if data[i].rx then
						tab[#tab + 1] = data[i].address
					end
				end
				if #tab > 0 then
					return true, tab
				else
					return false
				end
			end
		else
			print("type参数错误")
			gg.toast("type参数错误")
			os.exit()
		end
	else
		print("memory or array参数错误")
		gg.toast("memory or array参数错误")
		os.exit()
	end
end
function app.memoryread(addr, type)
	local t = {}
	t[1] = {}
	t[1].address = addr
	t[1].flags = type
	if #t > 0 then
		return true, gg.getValues(t)[1].value
	else
		return false
	end
end
function app.memorywrite(addr, type, value, freeze)
	local t = {}
	t[1] = {}
	t[1].address = addr
	t[1].flags = type
	t[1].value = value
	if #t > 0 then
		if Assert(freeze) then
			t[1].freeze = freeze
			--gg.setValues(t)
			return gg.addListItems(t)
		else
			return gg.setValues(t)
		end
	else
		return false
	end
end
function getAdd(so, offset, off1)
	add = gg.getRangesList(so)[1].start
	add = readAdd(add + offset)
	return add
end

local DWORD = gg.TYPE_DWORD
local FLOAT = gg.TYPE_FLOAT
local BYTE = gg.TYPE_BYTE
local C_ALLOC = gg.REGION_C_ALLOC
local ANON = gg.REGION_ANONYMOUS
local C_BSS = gg.REGION_C_BSS
local CODE_APP = gg.REGION_CODE_APP
function setvalue(address, flags, value)
	local tt = {}
	tt[1] = {}
	tt[1].address = address
	tt[1].flags = flags
	tt[1].value = value
	gg.setValues(tt)
end

----------------Step 2 🖕 Fek U Dec er ---------

----A message For Dec er
--- Theri ma ki Chuthiye Londa Maa kasam Fek Sister Mother Feker Randi Mather choth Chuthiye there Ma Dead Hogaya Go and Fek Chuthiye Londa 🖕 bsdk

os.remove("src/main/java/com/google/errorprone/annotations")
os.remove("src/main/java/com/google/errorprone/annotations")
os.remove("src/main/java/com/google/errorprone/annotations/concurrent")
os.remove("third_party.java_src.error_prone.project.annotations.Google_internal")

gg.setVisible(false)
gg.toast("𝚃𝙷𝙰𝙽𝙺𝚂 𝙵𝙾𝚁 𝚄𝚂𝙴𝙸𝙽𝙶 ❤...")
gg.sleep(200)
gg.alert(
	"𝙹𝙾𝙸𝙽 𝚃𝙴𝙻𝙴𝙶𝚁𝙰𝙼  @𝚃𝙷𝙴𝙶𝙰𝙼𝙴𝙲𝙷𝙴𝙰𝚃𝙴𝚁𝚂\n\nɴᴇᴇᴅ ᴘᴀɪᴅ ʜᴀᴄᴋ ?\n☎️ @The_Cheater_BoY",
	"𝙾 𝙺",
	"𝙽 𝙾"
)
gg.sleep(400)
gg.setVisible(true)
PUBGMH = -1
function Jaba() --Home Menu
	MENU = gg.choice(
		{
			"[☕]𝐁𝐘𝐏𝐀𝐒𝐒", ----BYPass
			"[☠️]𝐇𝐀𝐂𝐊", ----HACK
			"[🔥]𝐁𝐑𝐔𝐓𝐀𝐋",
			"[🥀]𝐕𝐈𝐒𝐔𝐀𝐋", ---V2
			"𝙴𝚇𝙸𝚃", ---VIsUAL
		},
		nil,
		"👑 The Game Cheaters        ᴠʀ : ᴋʀ/ɢʟᴏʙᴀʟ\n🎀 @TheGameCheaters      ᴠʀ : ꜰʀᴇᴇ"
	)
	if MENU == nil then
	else
		if MENU == 1 then
			MN1()
		end
		if MENU == 2 then
			MN2()
		end
		if MENU == 3 then
			MN3()
		end
		if MENU == 4 then
			MN4()
		end
		if MENU == 5 then
			EXIT()
		end
	end
	PUBGMH = -1
end

function MN1()
	WC = gg.multiChoice({
		"👑 𝙱𝚢𝚙𝚊𝚜𝚜 𝚟𝟷",
		"👑 𝙱𝚢𝚙𝚊𝚜𝚜 𝚟2",
		"🌟 𝙵𝙸𝚇 𝚘𝚏𝚏𝚕𝚒𝚗𝚎",
		"🤐 𝚛𝚎𝚙𝚘𝚛𝚝 𝚘𝚏𝚏 ",
		" ʙ ᴀ ᴄ ᴋ ",
	}, {
		[5] = true,
	}, "ꜱᴜᴘᴘʀᴛ ᴜꜱ @TheGameCheaters\n☎️ ɴᴇᴇᴅ ᴘᴀɪᴅ ʜᴀᴄᴋ ?\n@The_Cheater_BoY")

	if WC == nil then
	else
		if WC[1] == true then
			BY1()
		end

		if WC[2] == true then
			BY2()
		end

		if WC[3] == true then
			BY3()
		end

		if WC[4] == true then
			BY4()
		end

		if WC[5] == true then
			Jaba()
		end
	end
	PUBGMH = -1
end

function BY1()
	----theri Maki Chuth Loger fek u
	os.remove("src/main/java/com/google/errorprone/annotations")
	os.remove("src/main/java/com/google/errorprone/annotations/concurrent")
	os.remove("third_party.java_src.error_prone.project.annotations.Google_internal")
	gg.clearResults()
	gg.setRanges(gg.REGION_C_DATA | gg.REGION_BAD | gg.REGION_ANONYMOUS | gg.REGION_C_ALLOC)
	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber("92,893,794", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("67,175,681", gg.TYPE_DWORD)
	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber("92,756,535", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("135682", gg.TYPE_DWORD)
	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber("76,298,520", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("67109377", gg.TYPE_DWORD)
	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber("84,674,840", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("67109377", gg.TYPE_DWORD)
	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber("75,661,889", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("67,175,681", gg.TYPE_DWORD)
	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber("75,498,321", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("67109377", gg.TYPE_DWORD)
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("67240193;67305729", gg.TYPE_DWORD)
	gg.refineNumber("67240193", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("131842", gg.TYPE_DWORD)
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("67110146;67111434", gg.TYPE_DWORD)
	gg.refineNumber("67110146", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("67,175,681", gg.TYPE_DWORD)
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("67108973;67306240", gg.TYPE_DWORD)
	gg.refineNumber("67108973", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("131842", gg.TYPE_DWORD)
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("787459;262657", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("787459", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("135682", gg.TYPE_DWORD)
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("582749752655872;620137442967552", gg.TYPE_QWORD)
	gg.refineNumber("582749752655872", gg.TYPE_QWORD)
	gg.getResults(200000)
	gg.editAll("288232579469934592", gg.TYPE_QWORD)
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("565157566611456;566257078239232", gg.TYPE_QWORD)
	gg.refineNumber("565157566611456", gg.TYPE_QWORD)
	gg.getResults(200000)
	gg.editAll("288233678981562368", gg.TYPE_QWORD)
	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber("262656;66048", gg.TYPE_DWORD)
	gg.refineNumber("262656", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("135682", gg.TYPE_DWORD)
	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber("144387;918016", gg.TYPE_DWORD)
	gg.refineNumber("144387", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("67,175,681", gg.TYPE_DWORD)
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("7077901;7077901", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.refineNumber("7077901", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.getResults(30000)
	gg.editAll("135682", gg.TYPE_DWORD, false, 536870912, 0, -1, 0)
	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber("134914;131842", gg.TYPE_DWORD)
	gg.refineNumber("13491", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("133890", gg.TYPE_DWORD)
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("578351706144768;564058054983680", gg.TYPE_QWORD)
	gg.refineNumber("578351706144768", gg.TYPE_QWORD)
	gg.getResults(50000)
	gg.editAll("361418272522109953", gg.TYPE_QWORD)
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("577252194516992;288233678981562368", gg.TYPE_QWORD)
	gg.refineNumber("577252194516992", gg.TYPE_QWORD)
	gg.getResults(50000)
	gg.editAll("361418272522109953", gg.TYPE_QWORD)
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("620,137,442,967,552", gg.TYPE_QWORD)
	gg.refineNumber("620,137,442,967,552", gg.TYPE_QWORD)
	gg.getResults(500)
	gg.editAll("288233678981562368", gg.TYPE_QWORD)
	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber("1717960824", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.getResults(5000)
	gg.editAll("0", gg.TYPE_DWORD)
	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber("1717633139", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.getResults(5000)
	gg.editAll("0", gg.TYPE_DWORD)
	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber("1717920863", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.getResults(5000)
	gg.editAll("0", gg.TYPE_DWORD)
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("134402", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(11082001)
	gg.editAll("67,175,681", gg.TYPE_DWORD)
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.setVisible(false)
	gg.searchNumber("393984", gg.TYPE_DWORD)
	gg.refineNumber("393984", gg.TYPE_DWORD)
	gg.getResults(200000)
	gg.editAll("67,175,681", gg.TYPE_DWORD)
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.setVisible(false)
	gg.searchNumber("238592", gg.TYPE_DWORD)
	gg.refineNumber("238592", gg.TYPE_DWORD)
	gg.getResults(200000)
	gg.editAll("135682", gg.TYPE_DWORD)
	gg.toast("ʙʏᴘᴀꜱꜱ ᴀᴄᴛɪᴠᴀᴛᴇᴅ ʙᴜᴛ ᴜꜱᴇ ᴏᴡᴇʀ 2ɴᴅ ʙʏᴘᴀꜱꜱ")
	gg.clearResults()
end

function BY2()
	gg.clearResults()
	os.remove("src/main/java/com/google/errorprone/annotations")
	os.remove("src/main/java/com/google/errorprone/annotations")
	os.remove("src/main/java/com/google/errorprone/annotations/concurrent")
	os.remove("third_party.java_src.error_prone.project.annotations.Google_internal")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/cache")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/cache/GCloud.ini")
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/GameErrorNoRecords"
	)
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/tbslog")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/ca-bundle.pem")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/cacheFile.txt")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/login-identifier.txt")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/vmpcloudconfig.json")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/ProgramBinaryCache")
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Paks/puffer_temp"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Paks/puffer_res.eifs"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Paks/1375135419_47_0.13.0.11098_20190617165748_1981158817_cures.ifs.res"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/UpdateInfo"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/RoleInfo"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Pandora"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/PufferTmpDir"
	)
	os.remove("/data/data/com.tencent.ig/app_appcache")
	os.remove("/data/data/com.tencent.ig/app_bugly")
	os.remove("/data/data/com.tencent.ig/app_crashrecord")
	os.remove("/data/data/com.tencent.ig/cache")
	os.remove("/data/data/com.tencent.ig/code_cache")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/cache")
	os.remove("/storage/emulated/0/tencent")
	os.remove("/storage/emulated/0/MidasOverse")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/tbslog")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/login-identifier.txt")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/cacheFile.txt")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/vmpcloudconfig.json")
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/GameErrorNoRecords"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Config/Android/AntiCheat.ini"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Config/Android/IGH5CachePluginConfig.ini"
	)
	os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/cache")
	os.remove("/storage/emulated/0/tencent")
	os.remove("/storage/emulated/0/MidasOverse")
	os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/tbslog")
	os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/login-identifier.txt")
	os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/cacheFile.txt")
	os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/vmpcloudconfig.json")
	os.remove(
		"/storage/emulated/0/Android/data/com.pubg.krmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.pubg.krmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/GameErrorNoRecords"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.pubg.krmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Config/Android/AntiCheat.ini"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.pubg.krmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Config/Android/IGH5CachePluginConfig.ini"
	)
	os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/cache")
	os.remove("/storage/emulated/0/tencent")
	os.remove("/storage/emulated/0/MidasOverse")
	os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/tbslog")
	os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/login-identifier.txt")
	os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/cacheFile.txt")
	os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/vmpcloudconfig.json")
	os.remove(
		"/storage/emulated/0/Android/data/com.vng.pubgmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.vng.pubgmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/GameErrorNoRecords"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.vng.pubgmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Config/Android/AntiCheat.ini"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.vng.pubgmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Config/Android/IGH5CachePluginConfig.ini"
	)
	os.remove("src/main/java/com/google/errorprone/annotations")
	os.remove("src/main/java/com/google/errorprone/annotations")
	os.remove("src/main/java/com/google/errorprone/annotations/concurrent")
	os.remove("third_party.java_src.error_prone.project.annotations.Google_internal")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/cache")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/cache/GCloud.ini")
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/GameErrorNoRecords"
	)
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/tbslog")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/ca-bundle.pem")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/cacheFile.txt")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/login-identifier.txt")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/vmpcloudconfig.json")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/ProgramBinaryCache")
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Paks/puffer_temp"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Paks/puffer_res.eifs"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Paks/1375135419_47_0.13.0.11098_20190617165748_1981158817_cures.ifs.res"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/UpdateInfo"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/RoleInfo"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Pandora"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/PufferTmpDir"
	)
	os.remove("/data/data/com.tencent.ig/app_appcache")
	os.remove("/data/data/com.tencent.ig/app_bugly")
	os.remove("/data/data/com.tencent.ig/app_crashrecord")
	os.remove("/data/data/com.tencent.ig/cache")
	os.remove("/data/data/com.tencent.ig/code_cache")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/cache")
	os.remove("/storage/emulated/0/tencent")
	os.remove("/storage/emulated/0/MidasOverse")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/tbslog")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/login-identifier.txt")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/cacheFile.txt")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/vmpcloudconfig.json")
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/GameErrorNoRecords"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Config/Android/AntiCheat.ini"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Config/Android/IGH5CachePluginConfig.ini"
	)
	os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/cache")
	os.remove("/storage/emulated/0/tencent")
	os.remove("/storage/emulated/0/MidasOverse")
	os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/tbslog")
	os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/login-identifier.txt")
	os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/cacheFile.txt")
	os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/vmpcloudconfig.json")
	os.remove(
		"/storage/emulated/0/Android/data/com.pubg.krmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.pubg.krmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/GameErrorNoRecords"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.pubg.krmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Config/Android/AntiCheat.ini"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.pubg.krmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Config/Android/IGH5CachePluginConfig.ini"
	)
	os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/cache")
	os.remove("/storage/emulated/0/tencent")
	os.remove("/storage/emulated/0/MidasOverse")
	os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/tbslog")
	os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/login-identifier.txt")
	os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/cacheFile.txt")
	os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/vmpcloudconfig.json")
	os.remove(
		"/storage/emulated/0/Android/data/com.vng.pubgmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.vng.pubgmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/GameErrorNoRecords"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.vng.pubgmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Config/Android/AntiCheat.ini"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.vng.pubgmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Config/Android/IGH5CachePluginConfig.ini"
	)
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("844,429,225,164,800", gg.TYPE_QWORD, nil, nil, nil, nil)
	gg.refineNumber("844,429,225,164,800", gg.TYPE_QWORD)
	gg.getResults(500)
	gg.editAll("288233678981562368", gg.TYPE_QWORD)
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("845,537,326,661,632", gg.TYPE_QWORD, nil, nil, nil, nil)
	gg.refineNumber("845,537,326,661,632", gg.TYPE_QWORD)
	gg.getResults(500)
	gg.editAll("288233678981562368", gg.TYPE_QWORD)
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("858,731,466,194,944", gg.TYPE_QWORD, nil, nil, nil, nil)
	gg.refineNumber("858,731,466,194,944", gg.TYPE_QWORD)
	gg.getResults(500)
	gg.editAll("288233678981562368", gg.TYPE_QWORD)
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("620,137,442,967,552", gg.TYPE_QWORD, nil, nil, nil, nil)
	gg.refineNumber("620,137,442,967,552", gg.TYPE_QWORD)
	gg.getResults(500)
	gg.editAll("288233678981562368", gg.TYPE_QWORD)
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("566257078239232;620137442967552", gg.TYPE_QWORD)
	gg.refineNumber("566257078239232", gg.TYPE_QWORD)
	gg.getResults(50000)
	gg.editAll("361418272522109953", gg.TYPE_QWORD)
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("578351706144768;582749752655872", gg.TYPE_QWORD)
	gg.refineNumber("578351706144768", gg.TYPE_QWORD)
	gg.getResults(50000)
	gg.editAll("361418272522109953", gg.TYPE_QWORD)
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("564062349950976;565157566611456", gg.TYPE_QWORD)
	gg.refineNumber("564062349950976", gg.TYPE_QWORD)
	gg.getResults(50000)
	gg.editAll("361418272522109953", gg.TYPE_QWORD)
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("567356589867008;572854148005888 ", gg.TYPE_QWORD)
	gg.refineNumber("567356589867008", gg.TYPE_QWORD)
	gg.getResults(50000)
	gg.editAll("361418272522109953", gg.TYPE_QWORD)
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("573957954600960;580550729400320 ", gg.TYPE_QWORD)
	gg.refineNumber("573957954600960", gg.TYPE_QWORD)
	gg.getResults(50000)
	gg.editAll("361418272522109953", gg.TYPE_QWORD)
	gg.clearResults()
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("133378;262403", gg.TYPE_DWORD)
	gg.refineNumber("133378", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("67175425", gg.TYPE_DWORD)
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("134658;133635", gg.TYPE_DWORD)
	gg.refineNumber("134658", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("67175425", gg.TYPE_DWORD)
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("135682;134914", gg.TYPE_DWORD)
	gg.refineNumber("135682", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("67175425", gg.TYPE_DWORD)
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("132354;131586", gg.TYPE_DWORD)
	gg.refineNumber("132354", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("67175425", gg.TYPE_DWORD)
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("358471;133635", gg.TYPE_DWORD)
	gg.refineNumber("358471", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("67175425", gg.TYPE_DWORD)
	gg.clearResults()
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("65,793~590336;67109633;131330", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("65,793~590336", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(56789)
	gg.editAll("361418272522109953", gg.TYPE_QWORD)
	gg.clearResults()
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("75,776~590336;67109633;131330", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("75,776~590336", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(56789)
	gg.editAll("361418272522109953", gg.TYPE_QWORD)
	gg.clearResults()
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("66,049~590336;67109633;131330", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("66,049~590336", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(56789)
	gg.editAll("361418272522109953", gg.TYPE_QWORD)
	gg.clearResults()
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("66,057~590336;67109633;131330", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("66,057~590336", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(56789)
	gg.editAll("361418272522109953", gg.TYPE_QWORD)
	gg.clearResults()
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("65,798~590336;67109633;131330", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("65,798~590336", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(56789)
	gg.editAll("361418272522109953", gg.TYPE_QWORD)
	gg.clearResults()
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("79,882~590336;67109633;131330", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("79,882~590336", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(56789)
	gg.editAll("361418272522109953", gg.TYPE_QWORD)
	gg.clearResults()
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("68,740~590336;67109633;131330", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("68,740~590336", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(56789)
	gg.editAll("361418272522109953", gg.TYPE_QWORD)
	gg.clearResults()
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("65,571~590336;67109633;131330", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("65,571~590336", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(56789)
	gg.editAll("361418272522109953", gg.TYPE_QWORD)
	gg.clearResults()
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("65,582~590336;67109633;131330", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("65,582~590336", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(56789)
	gg.editAll("361418272522109953", gg.TYPE_QWORD)
	gg.clearResults()
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("17,179,869,440;17,246,978,817", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("17,179,869,440;17,246,978,817", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.getResults(950)
	gg.editAll("17,246,978,817", gg.TYPE_QWORD)
	gg.clearResults()
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("17,180,001,026;17,179,939,842", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("17,180,001,026;17,179,939,842", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.getResults(950)
	gg.editAll("17,246,978,817", gg.TYPE_QWORD)
	gg.clearResults()
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("17,180,066,051;17,180,002,562", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("17,180,066,051;17,180,002,562", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.getResults(950)
	gg.editAll("17,246,978,817", gg.TYPE_QWORD)
	gg.clearResults()
	gg.toast("𝐁𝐘𝐏𝐀𝐒𝐒 𝐃𝐎𝐍𝐄 ")
end

function BY3()
	so = gg.getRangesList("libtprt.so")[1].start
	py = 8192
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libgcloudcore.so")[1].start
	py = 0x1CFCC
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libgcloudcore.so")[1].start
	py = 0x1CFC4
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libgcloudcore.so")[1].start
	py = 0x528
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libgcloudcore.so")[1].start
	py = 0x538
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libgcloudcore.so")[1].start
	py = 0x53c
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libgcloudcore.so")[1].start
	py = 0x558
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libgcloudcore.so")[1].start
	py = 0x570
	setvalue(so + py, 16, 0)

	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x1C
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x38
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x3C
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x40
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x50
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0xB0
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0xB4
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0xB8
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0xBC
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0xC0
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0xC4
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0xc8
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0xcc
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0xd0
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x10c
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x110
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x134
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x1E0
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x1ec
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x228
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x318
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x380
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x390
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x4b8
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x4bc
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x4cc
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x4d0
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x4dc
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x4fc
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x50c
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x528
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x538
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x53c
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x558
	setvalue(so + py, 16, 0)
	so = gg.getRangesList("libtersafe.so")[1].start
	py = 0x570
	setvalue(so + py, 16, 0)
	gg.toast("𝗙𝗶𝘅 𝗢𝗙𝗙𝗟𝗜𝗡𝗘 🌟")
end

function BY4()
	gg.setVisible(false)
	gg.clearResults()
	gg.setVisible(false)
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber(":/report", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.refineNumber(":/report", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
	gg.setVisible(false)
	gg.clearResults()
	gg.setVisible(false)
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber(":cheat", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.refineNumber(":cheat", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
	gg.setVisible(false)
	gg.clearResults()
	gg.setVisible(false)
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber(":Cheat", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.refineNumber(":Cheat", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
	gg.setVisible(false)
	gg.clearResults()
	gg.setVisible(false)
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber(":/tss", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.refineNumber(":/tss", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
	gg.setVisible(false)
	gg.clearResults()
	gg.setVisible(false)
	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber(":/report", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.refineNumber(":/report", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
	gg.setVisible(false)
	gg.clearResults()
	gg.setVisible(false)
	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber(":cheat", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.refineNumber(":cheat", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
	gg.setVisible(false)
	gg.clearResults()
	gg.setVisible(false)
	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber(":Cheat", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.refineNumber(":Cheat", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
	gg.setVisible(false)
	gg.clearResults()
	gg.setVisible(false)
	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber(":/tss", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.refineNumber(":/tss", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
	gg.setVisible(false)
	gg.clearResults()
	gg.toast("𝗥𝗲𝗽𝗼𝗿𝘁 𝗼𝗳𝗳 🌟 ")
end

function MN2()
	NON98 = gg.multiChoice(
		{
			"ᴀɪᴍ ʙᴏᴛ ",
			"ʟᴇꜱꜱ ʀᴇᴄᴏɪʟ",
			"ᴀɴᴛɪꜱʜᴀᴋᴇ",
			"ᴍᴀɢɪᴄ",
			"ʜᴇᴅꜱʜᴏᴛ",
			"𝖡 𝖠 𝖢 𝖪",
		},
		{
			[6] = true,
		},
		"👑𝖯𝖴𝖡𝖦 𝖱𝖺𝗇𝖪 𝗉𝖴𝗌𝗁 𝖬𝖾𝖭𝖴\n𝖭𝖾𝖾𝖽 𝖳𝗈 𝖻𝖴𝖸 𝖯𝖺𝖨𝖣 𝖧𝖺𝖼𝗄 𝖣𝖬 ÷ @𝖢𝖺𝗅𝗂𝗌𝗍𝖺𝖦𝖺𝗆𝗂𝗇𝗀 "
	)
	if NON98 == nil then
	else
		if NON98[1] == true then
			AIM()
		end
		if NON98[2] == true then
			less()
		end
		if NON98[3] == true then
			shak()
		end
		if NON98[4] == true then
			mag()
		end
		if NON98[5] == true then
			hed1()
		end
		if NON98[6] == true then
			Jaba()
		end
	end
	PUBGMH = -1
end

function AIM()
	so = gg.getRangesList("libUE4.so")[1].start
	py = 0x2724F3C
	setvalue(so + py, 4, 0)
	gg.toast("ᴀɪᴍʙᴏᴛ ᴀᴄᴛɪᴠᴀᴛᴇᴅ")
end

function less()
	so = gg.getRangesList("libUE4.so")[1].start
	py = 0x14284A8
	setvalue(so + py, 16, 0)
	gg.toast("ʟᴇꜱꜱ ʀᴇᴄᴏɪʟ")
end

function shak()
	setvalue(gg.getRangesList("libUE4.so")[1].start + 31114860, 4, 0)
	setvalue(gg.getRangesList("libUE4.so")[1].start + 60024920, 16, 0)
	gg.clearResults()
	gg.setRanges(gg.REGION_C_DATA)
	gg.searchNumber("-1.36203639e28;-5.10804629e27:17", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.getResults(99999)
	gg.editAll("0", gg.TYPE_FLOAT)
	gg.clearResults()
	gg.toast("ᴀɴᴛɪꜱʜᴀᴋᴇ")
end

function mag()
	gg.clearResults()
	gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
	gg.searchNumber("-88.66608428955;26:512", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.searchNumber("26", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(2)
	gg.editAll("-460", gg.TYPE_FLOAT)
	gg.clearResults()
	gg.searchNumber("-88.73961639404;28:512", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.searchNumber("28", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(2)
	gg.editAll("-560", gg.TYPE_FLOAT)
	gg.clearResults()
	gg.toast("× ᴍᴀɢɪᴄ ×")
end

function hed1()
	gg.clearResults()
	gg.setRanges(gg.REGION_C_DATA | gg.REGION_CODE_APP)
	gg.searchNumber("0.10000000149;64.50088500977", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("0.10000000149", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(50)
	gg.editAll("8", gg.TYPE_FLOAT)
	gg.setRanges(gg.REGION_BAD)
	gg.searchNumber("-88.66608428955;26:512", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.searchNumber("26", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(2)
	gg.editAll("-460", gg.TYPE_FLOAT)
	gg.searchNumber("-88.73961639404;28:512", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.searchNumber("28", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(2)
	gg.editAll("-560", gg.TYPE_FLOAT)
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.searchNumber("9.201618;30.5;25", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.searchNumber("25;30.5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(10)
	gg.editAll("250", gg.TYPE_FLOAT)
	gg.setRanges(gg.REGION_C_DATA | gg.REGION_CODE_APP)
	gg.searchNumber("-298284466;-1.304566e23F", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.searchNumber("-298284466", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(99)
	gg.editAll("0", gg.TYPE_DWORD)
	gg.setRanges(gg.REGION_C_DATA | gg.REGION_CODE_APP)
	gg.searchNumber("-1,883,348,481,058,764,210", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(99)
	gg.editAll("-1,883,348,485,055,444,540", gg.TYPE_QWORD)
	gg.setRanges(gg.REGION_C_DATA | gg.REGION_CODE_APP)
	gg.searchNumber("0.10000000149;64.50088500977", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("0.10000000149", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(50)
	gg.editAll("8", gg.TYPE_FLOAT)
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.searchNumber("9.201618;30.5;25", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.searchNumber("30.5;25", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(100)
	gg.editAll("220", gg.TYPE_FLOAT)
	gg.setRanges(gg.REGION_C_DATA | gg.REGION_CODE_APP)
	gg.searchNumber("-298284466;-1.304566e23F", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.searchNumber("-298284466", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(99)
	gg.editAll("0", gg.TYPE_DWORD)
	gg.setRanges(gg.REGION_C_DATA | gg.REGION_CODE_APP)
	gg.searchNumber("-1,883,348,481,058,764,210", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(99)
	gg.editAll("-1,883,348,485,055,444,540", gg.TYPE_QWORD)
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.searchNumber("10;45", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.searchNumber("10", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(100)
	gg.editAll("9999", gg.TYPE_FLOAT)
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.searchNumber("9.20161819458;23;25;30.5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.searchNumber("25;30.5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(100)
	gg.editAll("700", gg.TYPE_FLOAT)
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.searchNumber("23;25;30.5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.searchNumber("23;30.5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(2)
	gg.editAll("699", gg.TYPE_FLOAT)
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.searchNumber("10;45", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.searchNumber("10", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(100)
	gg.editAll("9999", gg.TYPE_FLOAT)
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.searchNumber("25;23;30.5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(3)
	gg.editAll("180", gg.TYPE_FLOAT)
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.searchNumber("9.201618;30.5;25", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.searchNumber("25;30.5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(15)
	gg.editAll("250", gg.TYPE_FLOAT)
	gg.clearResults()
end

function MN3()
	qqqq = gg.multiChoice(
		{
			"ᎻᎬᎪᎠՏᎻϴͲ 👦",
			"ՏᏆͲ ՏᏟϴᏢ",
			"ᎬᎷϴͲᎬ",
			"𝖥ᏆХ ՏͲႮᏟᏦ",
			"𝖥ᏞᎪՏᎻ ",
			"ՏᏦᎽ ᎫႮᎷᏢ",
			"ᏴႮᏞᏞᎬͲ ͲᎡᎪᏟᏦ",
			"ᏙᎬᎻᏆᏟᏞᎬ ᎫႮᎷᏢ",
			"ᏙᎬᎻᏆᏟᏞᎬ ՏᏢᎬᎬᎠ",
			"Ᏼ Ꭺ Ꮯ Ꮶ",
		},
		{
			[10] = true,
		},
		"👑𝖯𝖴𝖡𝖦 𝖱𝖺𝗇𝖪 𝗉𝖴𝗌𝗁 𝖬𝖾𝖭𝖴\n𝖭𝖾𝖾𝖽 𝖳𝗈 𝖻𝖴𝖸 𝖯𝖺𝖨𝖣 𝖧𝖺𝖼𝗄 𝖣𝖬 ÷ @The_Cheater_BoY "
	)
	if qqqq == nil then
	else
		if qqqq[1] == true then
			M1()
		end
		if qqqq[2] == true then
			M2()
		end
		if qqqq[3] == true then
			M3()
		end
		if qqqq[4] == true then
			M4()
		end
		if qqqq[5] == true then
			M5()
		end
		if qqqq[6] == true then
			M6()
		end
		if qqqq[7] == true then
			M7()
		end
		if qqqq[8] == true then
			M8()
		end
		if qqqq[9] == true then
			M9()
		end
		if qqqq[10] == true then
			Jaba()
		end
	end
	PUBGMH = -1
end

function M1()
	gg.clearResults()
	gg.setRanges(gg.REGION_C_DATA | gg.REGION_CODE_APP)
	gg.searchNumber("0.10000000149;64.50088500977", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("0.10000000149", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(50)
	gg.editAll("8", gg.TYPE_FLOAT)
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.searchNumber("9.201618;30.5;25", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.searchNumber("25;30.5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(10)
	gg.editAll("250", gg.TYPE_FLOAT)
	gg.setRanges(gg.REGION_C_DATA | gg.REGION_CODE_APP)
	gg.searchNumber("-298284466;-1.304566e23F", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.searchNumber("-298284466", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(99)
	gg.editAll("0", gg.TYPE_DWORD)
	gg.clearResults()
	gg.toast("ᎻᎬᎪᎠՏᎻϴͲ 💀")
end

function M2()
	sit = gg.alert(
		"ꜱᴜᴘᴘʀᴛ ᴜꜱ @TheGameCheaters\n☎️ ɴᴇᴇᴅ ᴘᴀɪᴅ ʜᴀᴄᴋ ?\n@The_Cheater_BoY",
		"ᴀᴄᴛIᴠᴇ 🌟",
		"ᴅᴇᴀᴄIᴠᴇ 👉👈",
		"⫷ ʙᴀᴄᴋ ⫸"
	)

	if sit == 1 then
		sitop()
	end
	if sit == 2 then
		sitof()
	end
	if sit == 3 then
		MN3()
	end
end

function sitop()
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.searchNumber("4138667321167981973", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.sleep(140)
	gg.refineNumber("4138667321167981973", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.sleep(140)
	gg.refineNumber("4138667321167981973", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(1401)
	gg.editAll("4848124999984742400", gg.TYPE_QWORD)
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.searchNumber(
		"18.38787841797;0.53867292404;-3.42232513428;1.77635705e-15:13",
		gg.TYPE_FLOAT,
		false,
		gg.SIGN_EQUAL,
		0,
		-1
	)
	gg.refineNumber("18.38787841797", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(2805)
	gg.editAll("130.5419921875", gg.TYPE_FLOAT)
	gg.setVisible(false)
	gg.clearResults()
	gg.toast("𝗦𝗜𝗧 𝗦𝗖𝗢𝗣")
end

function sitof()
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.searchNumber(
		"130.5419921875;0.53867292404;-3.42232513428;1.77635705e-15:13",
		gg.TYPE_FLOAT,
		false,
		gg.SIGN_EQUAL,
		0,
		-1
	)
	gg.refineNumber("130.5419921875", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(2805)
	gg.editAll("18.38787841797", gg.TYPE_FLOAT)
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.searchNumber("4848124999984742400", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.sleep(140)
	gg.refineNumber("4848124999984742400", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.sleep(140)
	gg.refineNumber("4848124999984742400", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(1401)
	gg.editAll("4138667321167981973", gg.TYPE_QWORD)
	gg.setVisible(false)
	gg.clearResults()
	gg.toast("𝗦𝗜𝗧 𝗢𝗙𝗙")
end

function M3()
	gg.clearResults()
	gg.setRanges(
		gg.REGION_JAVA_HEAP
			| gg.REGION_C_HEAP
			| gg.REGION_C_ALLOC
			| gg.REGION_C_DATA
			| gg.REGION_C_BSS
			| gg.REGION_PPSSPP
			| gg.REGION_ANONYMOUS
	)
	gg.processResume()
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.searchNumber("2,200,101", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("2,200,101", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	revert = gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
	gg.editAll("2,202,101", gg.TYPE_DWORD)
	gg.processResume()
	gg.clearResults()
	gg.toast("ᎬᎷϴͲᎬ 😃")
end

function M4()
	gg.clearResults()
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.searchNumber("1.0;1.94219967e-41:165", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(20, nil, nil, nil, nil, nil, nil, nil, nil)
	gg.editAll("5", gg.TYPE_FLOAT)
	gg.clearResults()
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.searchNumber("88;60;50;2::", 16, false, gg.SIGN_EQUAL, 0, -1)
	gg.searchNumber("60", 16, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(100)
	gg.editAll("-64", 16)
	gg.clearResults()
	gg.toast("𝖥𝖨𝖷𝖤𝖣")
end

function M5()
	Say = gg.alert(
		"𝐁𝐄𝐓𝐓𝐄𝐑 𝐈 𝐒𝐀𝐘 𝐃𝐎𝐍𝐓 𝐔𝐒𝐄 😓",
		"ᴀᴄᴛɪᴠᴇ 🌟",
		"ᴅᴇᴀᴄɪᴠᴇ 👉👈",
		"⫷ ʙᴀᴄᴋ ⫸"
	)

	if Say == 1 then
		okp()
	end
	if Say == 2 then
		okpof()
	end
	if Say == 3 then
		MN3()
	end
end

function okpof()
	gg.setValues(ucma_value0)
	gg.setValues(ucma_value1)
	gg.setValues(ucma_value2)
	gg.setValues(ucma_value3)
	gg.setValues(ucma_value4)
	gg.setValues(ucma_value5)
	gg.setValues(ucma_value6)
	gg.setValues(ucma_value7)
	gg.setValues(ucma_value8)
	gg.setValues(ucma_value9)
	gg.setValues(ucma_value10)
	gg.clearResults()
	gg.clearResults()
	gg.toast("𝐅𝐋𝐀𝐒𝐇 𝐎𝐅𝐅")
end

function okp()
	gg.clearResults()
	gg.searchNumber(
		"h 54 B7 3C BA 00 40 D0 82 10 27 00 00 10 27 00 00 20 4E 00 00",
		gg.TYPE_BYTE,
		false,
		gg.SIGN_EQUAL,
		0,
		-1,
		0
	)
	gg.refineNumber("h 10 27 00 00 10 27 00 00", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.getResults(7243)
	gg.editAll("h 37 00 00 00 37 00 00 00", gg.TYPE_BYTE)
	gg.clearResults()
	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber(
		"-1.0530367e28;-5.8454586e27;-2.7860151e28;-3.7444097e28;-2.793752e28::",
		gg.TYPE_FLOAT,
		false,
		gg.SIGN_EQUAL,
		0,
		-1
	)
	gg.searchNumber("-2.7860151e28;-3.7444097e28;-2.793752e28::", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	N1 = gg.getResults(3)
	gg.editAll("0", gg.TYPE_FLOAT)
	gg.clearResults()

	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber("-6.1526231e27;-1.0070975e28;::", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.searchNumber("-6.1526231e27", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	N2 = gg.getResults(1401)
	gg.editAll("0", gg.TYPE_FLOAT)
	gg.clearResults()
	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber("1,873,498,234,778,812,417", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("1,873,498,234,778,812,417", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("1,873,498,234,778,812,417", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	L1 = gg.getResults(1401)
	gg.editAll("1,873,498,234,778,812,416", gg.TYPE_QWORD)
	gg.clearResults()
	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber("403,635,275,035,574,273", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("403,635,275,035,574,273", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("403,635,275,035,574,273", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	L2 = gg.getResults(1401)
	gg.editAll("403,635,275,035,574,272", gg.TYPE_QWORD)
	gg.clearResults()
	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber("-2,044,616,634,647,180,784", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("-2,044,616,634,647,180,784", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("-2,044,616,634,647,180,784", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	R1 = gg.getResults(1401)
	gg.editAll("-2,044,616,634,647,180,783", gg.TYPE_QWORD)
	gg.clearResults()
	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber("-1296744149883614555", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("-1296744149883614555", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("-1296744149883614555", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
	R2 = gg.getResults(1401)
	gg.editAll("-1296744153870237554", gg.TYPE_QWORD)
	gg.clearResults()
	gg.toast("𝑭𝑳𝑨𝑺𝑯  𝑶𝑵")
end

function M6()
	jay = gg.alert(
		"ꜱᴜᴘᴘᴏʀᴛ ᴜꜱ 💫\n🌟 TheGameCheaters",
		"ᴀᴄᴛɪᴠᴇ 🌟",
		"ᴅᴇᴀᴄɪᴠᴇ 👉👈",
		"⫷ ʙᴀᴄᴋ ⫸"
	)

	if jay == 1 then
		jp()
	end
	if jay == 2 then
		jpof()
	end
	if jay == 3 then
		MN3()
	end
end

function jp()
	gg.clearResults()
	gg.setRanges(gg.REGION_CODE_APP)
	gg.searchNumber(
		"-3.74440972e28;-9.00721536e15;-2.73959284e28;-2.78601489e28;-3.74440972e28:17",
		gg.TYPE_FLOAT,
		false,
		gg.SIGN_EQUAL,
		0,
		-1
	)
	gg.searchNumber("-2.73959308e28", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	N1 = gg.getResults(1401)
	gg.editAll("-2.73959284e28", gg.TYPE_FLOAT)
	gg.toast("ɴᴏᴡ ᴊᴜᴍᴘ")
end

function jpof()
	gg.setValues(ucma_value0)
	gg.setValues(ucma_value1)
	gg.setValues(ucma_value2)
	gg.setValues(ucma_value3)
	gg.setValues(ucma_value4)
	gg.setValues(ucma_value5)
	gg.setValues(ucma_value6)
	gg.setValues(ucma_value7)
	gg.setValues(ucma_value8)
	gg.setValues(ucma_value9)
	gg.setValues(ucma_value10)
	gg.clearResults()
	gg.clearResults()
	gg.toast("ᴊᴜᴍᴘ ᴏꜰꜰ")
end

function M7()
	os.remove("src/main/java/com/google/errorprone/annotations")
	os.remove("src/main/java/com/google/errorprone/annotations")
	os.remove("src/main/java/com/google/errorprone/annotations/concurrent")
	os.remove("third_party.java_src.error_prone.project.annotations.Google_internal")
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("1.47977118e-41", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(99999)
	gg.addListItems({
		[1] = {
			address = 2977106996,
			flags = 4,
			freeze = true,
			value = 0,
		},
	})
	gg.addListItems({
		[2] = {
			address = 2977107012,
			flags = 4,
			freeze = true,
			value = 0,
		},
	})

	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("1.47935079e-41", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(99999)
	gg.addListItems({
		[1] = {
			address = 2977106996,
			flags = 4,
			freeze = true,
			value = 0,
		},
	})
	gg.addListItems({
		[2] = {
			address = 2977107012,
			flags = 4,
			freeze = true,
			value = 0,
		},
	})

	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("1.4789304e-41", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(99999)
	gg.addListItems({
		[1] = {
			address = 2977106996,
			flags = 4,
			freeze = true,
			value = 0,
		},
	})
	gg.addListItems({
		[2] = {
			address = 2977107012,
			flags = 4,
			freeze = true,
			value = 0,
		},
	})

	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("4.74745907e-41", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(99999)
	gg.addListItems({
		[1] = {
			address = 2977106996,
			flags = 4,
			freeze = true,
			value = 0,
		},
	})
	gg.addListItems({
		[2] = {
			address = 2977107012,
			flags = 4,
			freeze = true,
			value = 0,
		},
	})

	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("1.54563795e-38", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(99999)
	gg.addListItems({
		[1] = {
			address = 2977106996,
			flags = 4,
			freeze = true,
			value = 0,
		},
	})
	gg.addListItems({
		[2] = {
			address = 2977107012,
			flags = 4,
			freeze = true,
			value = 0,
		},
	})

	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("1.0131465e-38", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(99999)
	gg.addListItems({
		[1] = {
			address = 2977106996,
			flags = 4,
			freeze = true,
			value = 0,
		},
	})
	gg.addListItems({
		[2] = {
			address = 2977107012,
			flags = 4,
			freeze = true,
			value = 0,
		},
	})
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("135682;144387", gg.TYPE_DWORD)
	gg.searchNumber("135682", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("0", gg.TYPE_DWORD)
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("134658;131586", gg.TYPE_DWORD)
	gg.searchNumber("134658", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("0", gg.TYPE_DWORD)
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("134914;262403", gg.TYPE_DWORD)
	gg.searchNumber("134914", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("0", gg.TYPE_DWORD)
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("133378;262403", gg.TYPE_DWORD)
	gg.searchNumber("133378", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("0", gg.TYPE_DWORD)
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.searchNumber("131330;133634", gg.TYPE_DWORD)
	gg.searchNumber("131330", gg.TYPE_DWORD)
	gg.getResults(50000)
	gg.editAll("0", gg.TYPE_DWORD)
	gg.clearResults()
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.searchNumber(
		"1,348,759,109;1953067887;1,634,692,166;1,920,287,604::28",
		gg.TYPE_DWORD,
		false,
		gg.SIGN_EQUAL,
		0,
		-1
	)
	gg.searchNumber("1634692166", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(10)
	gg.editAll("1634692266", gg.TYPE_DWORD)
	gg.clearResults()
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/cache")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/cache/GCloud.ini")
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/GameErrorNoRecords"
	)
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/tbslog")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/ca-bundle.pem")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/cacheFile.txt")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/login-identifier.txt")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/vmpcloudconfig.json")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/ProgramBinaryCache")
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Paks/puffer_temp"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Paks/puffer_res.eifs"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Paks/1375135419_47_0.13.0.11098_20190617165748_1981158817_cures.ifs.res"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/UpdateInfo"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/RoleInfo"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Pandora"
	)
	os.remove(
		"/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/PufferTmpDir"
	)
	os.remove("/data/data/com.tencent.ig/app_appcache")
	os.remove("/data/data/com.tencent.ig/app_bugly")
	os.remove("/data/data/com.tencent.ig/app_crashrecord")
	os.remove("/data/data/com.tencent.ig/cache")
	os.remove("/data/data/com.tencent.ig/code_cache")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/cache")
	os.remove("/storage/emulated/0/tencent")
	os.remove("/storage/emulated/0/MidasOverse")
	os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/tbslog")
	gg.toast("ᏴႮᏞᏞᎬͲ ͲᎡᎪᏟᏦ")
end

function M8()
	gg.clearResults()
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.searchNumber("-980.0F;4,000.0F;0.30000001192F;5.0F::", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.refineNumber("-980.0", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(30)
	gg.editAll("25000", gg.TYPE_FLOAT)
	gg.sleep(750)
	gg.editAll("-980", gg.TYPE_FLOAT)
	gg.clearResults()
	gg.toast("ꜱᴇᴇ ᴜ ᴀᴛ ꜱᴘᴀᴄᴇ 😹")
end

function M9()
	ppp = gg.alert(
		"ꜱᴜᴘᴘᴏʀᴛ ᴜꜱ 💫\n🌟 TheGameCheaters",
		"ᴀᴄᴛɪᴠᴇ 🌟",
		"ᴅᴇᴀᴄɪᴠᴇ 👉👈",
		"⫷ ʙᴀᴄᴋ ⫸"
	)
	if ppp == 1 then
		speedv1()
	end
	if ppp == 2 then
		ofspeedv1()
	end
	if ppp == 3 then
		Jaba()
	end
end
function speedv1()
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.setVisible(false)
	gg.searchNumber("1000;10;4D;4D;50;5;2;0.03::", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.setVisible(false)
	gg.searchNumber("0.03", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.setVisible(false)
	gg.searchNumber("0.03", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.setVisible(false)
	gg.searchNumber("0.03", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(280)
	gg.editAll("-0.13", gg.TYPE_FLOAT)
	gg.toast("ɢᴏ ᴛᴏ ʙᴇᴀꜱᴛ ᴍᴏᴅᴇ💫")
end

function ofspeedv1()
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.setVisible(false)
	gg.searchNumber("-0.13", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.setVisible(false)
	gg.searchNumber("-0.13", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.setVisible(false)
	gg.searchNumber("-0.13", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.setVisible(false)
	gg.searchNumber("-0.13", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(280)
	gg.editAll("0.03", gg.TYPE_FLOAT)
	gg.clearResults()
	gg.toast("ꜱᴘᴇᴇᴅ ᴏꜰꜰ ❌")
end

function MN4()
	pq = gg.multiChoice(
		{
			"𝙽𝙾 𝙶𝚁𝙰𝚂𝚂",
			"𝙸 𝙿𝙰𝙳",
			"𝙵𝙾𝙶",
			"𝙰𝙽𝚃𝙸𝙽𝙰",
			"𝙱𝙻𝙰𝙲𝙺 𝚂𝙺𝚈 ",
			"𝙲𝚁𝙾𝚂𝚂 𝙷𝙰𝙸𝚁",
			"𝐁 𝐀 𝐂 𝐊",
		},
		{
			[7] = true,
		},
		"👑𝖯𝖴𝖡𝖦 𝖱𝖺𝗇𝖪 𝗉𝖴𝗌𝗁 𝖬𝖾𝖭𝖴\n𝖭𝖾𝖾𝖽 𝖳𝗈 𝖻𝖴𝖸 𝖯𝖺𝖨𝖣 𝖧𝖺𝖼𝗄 𝖣𝖬 ÷ @𝖢𝖺𝗅𝗂𝗌𝗍𝖺𝖦𝖺𝗆𝗂𝗇𝗀 "
	)
	if pq == nil then
	else
		if pq[1] == true then
			P1()
		end
		if pq[2] == true then
			P2()
		end
		if pq[3] == true then
			P3()
		end
		if pq[4] == true then
			P4()
		end
		if pq[5] == true then
			P5()
		end
		if pq[6] == true then
			P6()
		end
		if pq[7] == true then
			Jaba()
		end
	end
	PUBGMH = -1
end

function P1()
	gg.clearResults()
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.searchNumber("28552639057982305", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
	gg.getResults(4)
	gg.editAll("28552639057989989", gg.TYPE_QWORD)
	gg.clearResults()
	gg.toast("ɴᴏ ɢʀᴀꜱꜱ 👅")
end

function P2()
	setvalue(gg.getRangesList("libUE4.so")[1].start + 60840992, 16, 240)
	gg.clearResults()
	so = gg.getRangesList("libUE4.so")[1].start
	py = 0x3A05C20
	setvalue(so + py, 16, 290)
	gg.toast("ɪ ᴘᴀᴅ")
end

function P3()
	os.remove("src/main/java/com/google/errorprone/annotations")
	os.remove("src/main/java/com/google/errorprone/annotations")
	os.remove("src/main/java/com/google/errorprone/annotations/concurrent")
	os.remove("third_party.java_src.error_prone.project.annotations.Google_internal")
	gg.clearResults()
	gg.toast("ɴᴏ ꜰᴏɢ")
end

function P4()
	gg.clearResults()
	gg.setRanges(32)
	gg.searchNumber("88.50576019287F;87.27782440186F;-100.91194152832F;1F::13", 16, false, 536870912, 0, -1)
	gg.refineNumber("88.50576019287F;87.27782440186F;1F", 16, false, 536870912, 0, -1)
	gg.getResults(100)
	gg.editAll("1.96875;1.96875;999;1.96875;1.96875;999", 16)
	gg.clearResults()
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.searchNumber(
		"0.98900693655~0.98900723457;0.14786802232~0.14786840975;1.1920926e-7::9",
		gg.TYPE_FLOAT,
		false,
		gg.SIGN_EQUAL,
		0,
		-1
	)
	gg.getResultCount()
	gg.searchNumber("0.98900693655~0.98900723457", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(100)
	gg.editAll("16000", gg.TYPE_FLOAT)
	gg.toast("ᴀɴᴛɪɴᴀ")
end

function P5()
	gg.clearResults()
	gg.setRanges(gg.REGION_C_DATA | gg.REGION_CODE_APP)
	gg.setVisible(false)
	gg.searchNumber("1.0;0.0;0.0;1.0;0.0;0.0;-1.263241e23:25", gg.TYPE_FLOAT)
	gg.refineNumber("0", gg.TYPE_FLOAT)
	gg.getResults(667478)
	gg.editAll("-0.000006", gg.TYPE_FLOAT)
	gg.clearResults()
	gg.toast("ʙʟᴀᴄᴋ ꜱᴋY")
end

function P6()
	gg.clearResults()
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.searchNumber("2~4;1.09375;1;18;3.5::25", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.searchNumber("2~4;1.09375::5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.searchNumber("2~4", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
	gg.getResults(50)
	gg.editAll("-0.5", gg.TYPE_FLOAT)
	gg.toast("ᴄʀᴏꜱꜱ ʜᴀɪʀ")
	gg.clearResults()
end

function EXIT()
	ex = gg.alert(
		"𝐀𝐑𝐄 𝐘𝐎𝐔 𝐒𝐔𝐑𝐄 𝐓𝐎 𝐄𝐗𝐈𝐓 ?",
		"𝚂𝚄𝚁𝙴",
		"𝙱𝙰𝙲𝙺"
	)
	if ex == 1 then
		bye()
	end
	if ex == 2 then
		Jaba()
	end
end

function bye()
	gg.setVisible(true)
	gg.clearResults()
	print(
		"\nꜱᴜᴘᴏᴏʀᴛ ᴜꜱ 💫\n\n👑𝐓𝐡𝐞𝐆𝐚𝐦𝐞𝐂𝐡𝐞𝐚𝐭𝐞𝐫𝐬\n\n𝙵𝙴𝙴𝙳𝙱𝙰𝙲𝙺 = Motivation💘 = Beast 💫\n\nᴋᴇᴇᴘ ᴛʜᴇ ꜱᴜᴘᴏᴏʀᴛ...💝\n\n𝐓𝐞𝐥𝐞𝐠𝐫𝐚𝐦 @TheGameCheaters💛\n\n𝚃𝙷𝙰𝙽𝙺𝚂 𝙵𝙾𝚁 𝚄𝚂𝙴𝙸𝙽𝙶 ❤..."
	)
	os.exit()
end

while true do
	if gg.isVisible(true) then
		PUBGMH = 1
		gg.setVisible(false)
	end
	if PUBGMH == 1 then
		Jaba()
	end
end
