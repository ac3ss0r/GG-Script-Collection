--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]
--

do
	local v0 = tonumber
	local v1 = string.byte
	local v2 = string.char
	local v3 = string.sub
	local v4 = string.gsub
	local v5 = string.rep
	local v6 = table.concat
	local v7 = table.insert
	local v8 = math.ldexp
	local v9 = getfenv or function()
		return _ENV
	end
	local v10 = setmetatable
	local v11 = pcall
	local v12 = select
	local v13 = unpack or table.unpack
	local v14 = tonumber
	local function v15(v16, v17, ...)
		local v18 = 1
		local v19
		v16 = v4(v3(v16, 5), "..", function(v20)
			if v1(v20, 2) == 79 then
				v19 = v0(v3(v20, 1, 1))
				return ""
			else
				local v69 = 0
				local v70
				while true do
					if v69 == 0 then
						v70 = v2(v0(v20, 16))
						if v19 then
							local v99 = v5(v70, v19)
							v19 = nil
							return v99
						else
							return v70
						end
						break
					end
				end
			end
		end)
		local function v21(v22, v23, v24)
			if v24 then
				local v71 = (v22 / ((6 - 4) ^ (v23 - 1)))
					% (((417 - 322) - (49 + 44)) ^ (((v24 - 1) - (v23 - (1 + 0))) + (783 - (94 + 688)) + 0))
				return v71 - (v71 % (2 - (570 - (242 + 327))))
			else
				local v72 = 0 + 0
				local v73
				while true do
					if v72 == 0 then
						v73 = (1 + 1) ^ (v23 - ((9677 - 7683) - (642 + 1351)))
						return (((v22 % (v73 + v73)) >= v73) and (1343 - (7 + 1335))) or (0 + 0)
					end
				end
			end
		end
		local function v25()
			local v38 = v1(v16, v18, v18)
			v18 = v18 + 1
			return v38
		end
		local function v26()
			local v39 = 0 + (1589 - (32 + 1557))
			local v40
			local v41
			while true do
				if v39 == (2 - 1) then
					return (v41 * (609 - 353)) + v40
				end
				if v39 == (0 + 0) then
					v40, v41 = v1(v16, v18, v18 + (7 - 5))
					v18 = v18 + (1910 - (770 + (3280 - 2142)))
					v39 = 1 + 0
				end
			end
		end
		local function v27()
			local v42 = 0 + 0
			local v43
			local v44
			local v45
			local v46
			while true do
				if v42 == (2 - (1 - 0)) then
					return (v46 * (14546565 + 2230651))
						+ (v45 * (87762 - (13281 + 8945)))
						+ (v44 * (1163 - (832 + (677 - (171 + 431)))))
						+ v43
				end
				if (0 - 0) == v42 then
					v43, v44, v45, v46 = v1(v16, v18, v18 + (612 - (605 + 4)))
					v18 = v18 + (2001 - ((1984 - 914) + 927))
					v42 = 2 - 1
				end
			end
		end
		local function v28()
			local v47 = v27()
			local v48 = v27()
			local v49 = 1 + 0
			local v50 = (v21(v48, 2 - 1, 9 + 11) * ((1847 - (702 + 1143)) ^ (27 + 5))) + v47
			local v51 = v21(v48, 21, 31)
			local v52 = ((v21(v48, 12 + (54 - 34)) == 1) and -(1912 - (1375 + 536))) or (1 + 0)
			if v51 == (1345 - (212 + 1133)) then
				if v50 == (0 + 0) then
					return v52 * (0 + 0)
				else
					v51 = 1902 - (398 + 1503)
					v49 = 1559 - (570 + 1 + 988)
				end
			elseif v51 == (3384 - (319 + 947 + 71)) then
				return ((v50 == (0 + 0 + 0)) and (v52 * ((250 - (54 + 19 + 176)) / 0))) or (v52 * NaN)
			end
			return v8(v52, v51 - (1695 - 672)) * (v49 + (v50 / (2 ^ (1547 - (841 + 654)))))
		end
		local function v29(v30)
			local v53 = 0 - (1858 - (428 + 1430))
			local v54
			local v55
			while true do
				if v53 == (522 - (441 + 79)) then
					v55 = {}
					for v77 = 2 - 1, #v54 do
						v55[v77] = v2(v1(v3(v54, v77, v77)))
					end
					v53 = 1 + (1917 - (17 + 1898))
				end
				if v53 == (3 + 0) then
					return v6(v55)
				end
				if v53 == (243 - (49 + 193)) then
					v54 = v3(v16, v18, (v18 + v30) - (3 - 2))
					v18 = v18 + v30
					v53 = 1 + 1
				end
				if v53 == 0 then
					v54 = nil
					if not v30 then
						v30 = v27()
						if v30 == ((1907 - (666 + 1241)) + 0) then
							return ""
						end
					end
					v53 = 776 - (295 + 480)
				end
			end
		end
		local v31 = v27
		local function v32(...)
			return { ... }, v12("#", ...)
		end
		local function v33()
			local v56 = 0
			local v57
			local v58
			local v59
			local v60
			local v61
			local v62
			local v63
			local v64
			while true do
				if v56 == 4 then
					while true do
						if v57 ~= (0 - 0) then
						else
							v58 = 0 + 0
							v59 = nil
							v57 = 1908 - (858 + 1049)
						end
						if (2 + 0) == v57 then
							v62 = nil
							v63 = nil
							v57 = 3 + 0
						end
						if v57 == (1248 - (1038 + 209)) then
							local v94 = 0 - 0
							while true do
								if (47 - (21 + 26)) == v94 then
									v60 = nil
									v61 = nil
									v94 = 1 + 0
								end
								if v94 == 1 then
									v57 = 1294 - (1016 + 276)
									break
								end
							end
						end
						if v57 == 3 then
							v64 = nil
							while true do
								local v100 = 0
								while true do
									if v100 ~= (405 - (310 + 94)) then
									else
										if (1 + 0) == v58 then
											local v105 = 0
											while true do
												if v105 ~= (1284 - (406 + 878)) then
												else
													v63 = v27()
													v64 = {}
													v105 = 1
												end
												if v105 == (4 - 2) then
													v58 = 1590 - (1066 + 522)
													break
												end
												if v105 == 1 then
													for v117 = 1, v63 do
														local v118 = 0 + 0
														local v119
														local v120
														while true do
															if v118 == (971 - (523 + 448)) then
																local v132 = 0 - 0
																while true do
																	if v132 == (0 + 0) then
																		v119 = v25()
																		v120 = nil
																		v132 = 3 - 2
																	end
																	if v132 ~= (2 - 1) then
																	else
																		v118 = 1 + 0
																		break
																	end
																end
															end
															if v118 ~= (4 - 3) then
															else
																if v119 == (1 + 0) then
																	v120 = v25() ~= (0 - 0)
																elseif v119 == (1815 - (1305 + 508)) then
																	v120 = v28()
																elseif v119 == 3 then
																	v120 = v29()
																end
																v64[v117] = v120
																break
															end
														end
													end
													v62[8 - 5] = v25()
													v105 = 2 - 0
												end
											end
										end
										break
									end
									if v100 == 0 then
										if v58 == (2 + 0) then
											for v107 = 1 - 0, v27() do
												local v108 = 1112 - (633 + 479)
												local v109
												while true do
													if v108 == 0 then
														v109 = v25()
														if v21(v109, 1 - 0, 2 - 1) == (653 - (366 + 287)) then
															local v121 = 0
															local v122
															local v123
															local v124
															local v125
															while true do
																if v121 ~= (2 - 1) then
																else
																	v124 = nil
																	v125 = nil
																	v121 = 1064 - (184 + 878)
																end
																if v121 == 2 then
																	while true do
																		if v122 ~= 2 then
																		else
																			local v146 = 0 - 0
																			while true do
																				if v146 ~= 0 then
																				else
																					if
																						v21(v124, 1, 1 - 0) ~= (2 - 1)
																					then
																					else
																						v125[246 - (202 + 42)] =
																							v64[v125[254 - (226 + 26)]]
																					end
																					if
																						v21(
																							v124,
																							890 - (635 + 253),
																							447 - (122 + 323)
																						)
																						== (1 - 0)
																					then
																						v125[1866 - (805 + 1058)] =
																							v64[v125[3]]
																					end
																					v146 = 1 + 0
																				end
																				if v146 ~= (1 + 0) then
																				else
																					v122 = 5 - 2
																					break
																				end
																			end
																		end
																		if v122 ~= 1 then
																		else
																			local v147 = 0 + 0
																			while true do
																				if v147 == (948 - (944 + 4)) then
																					v125 = { v26(), v26(), nil, nil }
																					if v123 == (0 - 0) then
																						local v156 = 1301 - (1297 + 4)
																						while true do
																							if
																								v156
																								~= (1634 - (907 + 727))
																							then
																							else
																								v125[6 - 3] = v26()
																								v125[4] = v26()
																								break
																							end
																						end
																					elseif v123 == (1 - 0) then
																						v125[6 - 3] = v27()
																					elseif
																						v123 == (662 - (24 + 636))
																					then
																						v125[13 - 10] = v27()
																							- (2 ^ (4 + 12))
																					elseif v123 == 3 then
																						local v161 = 0 + 0
																						local v162
																						local v163
																						while true do
																							if v161 == 1 then
																								while true do
																									if
																										v162 ~= (0 + 0)
																									then
																									else
																										v163 = 0
																										while true do
																											if
																												v163
																												== (
																													0
																													- 0
																												)
																											then
																												v125[429 - (176 + 250)] = v27()
																													- (
																														(
																															793
																															- (
																																623
																																+ 168
																															)
																														)
																														^ 16
																													)
																												v125[4] =
																													v26()
																												break
																											end
																										end
																										break
																									end
																								end
																								break
																							end
																							if v161 == (0 - 0) then
																								v162 = 1373
																									- (902 + 471)
																								v163 = nil
																								v161 = 1
																							end
																						end
																					end
																					v147 = 1906 - (174 + 1731)
																				end
																				if (1 + 0) == v147 then
																					v122 = 2
																					break
																				end
																			end
																		end
																		if v122 ~= (0 + 0) then
																		else
																			v123 = v21(v109, 2, 8 - 5)
																			v124 = v21(v109, 4, 4 + 2)
																			v122 = 1 + 0
																		end
																		if v122 == (2 + 1) then
																			if v21(v124, 3, 3 + 0) == 1 then
																				v125[254 - (241 + 9)] =
																					v64[v125[1826 - (552 + 1270)]]
																			end
																			v59[v107] = v125
																			break
																		end
																	end
																	break
																end
																if 0 ~= v121 then
																else
																	v122 = 1668 - (475 + 1193)
																	v123 = nil
																	v121 = 1
																end
															end
														end
														break
													end
												end
											end
											for v110 = 1, v27() do
												v60[v110 - 1] = v33()
											end
											for v112 = 1 + 0, v27() do
												v61[v112] = v27()
											end
											return v62
										end
										if v58 ~= (0 + 0) then
										else
											v59 = {}
											v60 = {}
											v61 = {}
											v62 = { v59, v60, nil, v61 }
											v58 = 2 - 1
										end
										v100 = 1
									end
								end
							end
							break
						end
					end
					break
				end
				if v56 == (553 - (422 + 130)) then
					v59 = nil
					v60 = nil
					v56 = 2 + 0
				end
				if v56 == (0 - 0) then
					v57 = 740 - (13 + 727)
					v58 = nil
					v56 = 1
				end
				if v56 == (8 - 5) then
					v63 = nil
					v64 = nil
					v56 = 7 - 3
				end
				if v56 == (5 - 3) then
					v61 = nil
					v62 = nil
					v56 = 3
				end
			end
		end
		local function v34(v35, v36, v37)
			local v65 = 0
			local v66
			local v67
			local v68
			while true do
				if v65 == 1 then
					v68 = v35[3]
					return function(...)
						local v79 = 1
						local v80 = -1
						local v81 = { ... }
						local v82 = v12("#", ...) - 1
						local function v83()
							local v84 = v66
							local v85 = v67
							local v86 = v68
							local v87 = v32
							local v88 = {}
							local v89 = {}
							local v90 = {}
							for v95 = 754 - (535 + 219), v82 do
								if (3939 >= (3829 - (123 + 1159))) and (v95 >= v86) then
									v88[v95 - v86] = v81[v95 + (1 - (507 - (322 + 185)))]
								else
									v90[v95] = v81[v95 + ((1247 - (402 + 844)) - 0)]
								end
							end
							local v91 = (v82 - v86) + 1 + 0
							local v92
							local v93
							while true do
								local v96 = 0 + 0
								local v97
								while true do
									if (v96 == (0 - 0)) or ((68 - 17) >= (5152 - ((1253 - 928) + 1506))) then
										v97 = (0 + 0) - 0
										while true do
											if
												(v97 == (1397 - (1266 + 131)))
												or (3815 <= (5479 - ((2029 - (470 + 869)) + 1080)))
											then
												local v106 = 0
												while true do
													if (1919 == (2161 - (79 + 163))) and (v106 == 0) then
														v92 = v84[v79]
														v93 = v92[1376 - (848 + 527)]
														v106 = (784 - (723 + 57)) - 3
													end
													if (4950 >= (1019 + 127)) and (v106 == (1 - 0)) then
														v97 = 1 + 0
														break
													end
												end
											end
											if (3900 >= (2423 - (829 + 716))) and (v97 == 1) then
												if
													((3971 - ((1848 - (47 + 468)) + 85)) == (4991 - 2438))
													and (v93 <= (1881 - (607 + 1269)))
												then
													if ((3962 - 2621) == (952 + 389)) and (v93 <= 2) then
														if
															((5946 - 2544) > (2947 - 2227)) and (v93 <= ((0 - 0) - 0))
														then
															v79 = v92[(27 - 19) - 5]
														elseif
															((5716 - (811 + 217)) <= (3221 + 1485)) and (v93 == 1)
														then
															v90[v92[694 - (329 + 363)]]()
														elseif
															((2334 - (739 + 682)) >= (1609 - (422 + 298)))
															and (v92[2 + 0 + 0] == v90[v92[1677 - (1321 + 352)]])
														then
															v79 = v79 + 1
														else
															v79 = v92[7 - 4]
														end
													elseif (375 < (407 + 3540)) and (v93 <= (1791 - (1255 + 533))) then
														local v127 = 0 - (0 - 0)
														local v128
														local v129
														while true do
															if ((6360 - (111 + 1878)) > (431 + 92)) and (0 == v127) then
																v128 = 0 + (131 - (66 + 65))
																v129 = nil
																v127 = 3 - 2
															end
															if
																((3676 - (586 + (2680 - (1814 + 167)))) <= 3135)
																and (v127 == (2 - 1))
															then
																while true do
																	if
																		((1256 + 1850) == ((1140 + 3280) - 1314))
																		and ((0 + 0) == v128)
																	then
																		v129 = v92[2]
																		v90[v129](v90[v129 + 1 + 0])
																		break
																	end
																end
																break
															end
														end
													elseif (v93 == 4) or ((3050 + 1358) == (1014 + 339)) then
														for v142 = v92[1 + 1], v92[1014 - (334 + 677)] do
															v90[v142] = nil
														end
													else
														v90[v92[1571 - (1022 + 547)]] = v92[421 - (285 + 133)]
															~= (0 + 0)
													end
												elseif
													(v93 <= (766 - (327 + 431)))
													or ((5854 - ((1676 - (845 + 307)) + 760)) <= 3682)
												then
													if (v93 <= (9 - 3)) or ((13329 - 8435) < (7109 - 4685)) then
														if
															(2425 == (4270 - (1077 + 768)))
															and (v90[v92[4 - 2]] == v92[(628 + 181) - (599 + 206)])
														then
															v79 = v79 + (1204 - (387 + 816))
														else
															v79 = v92[1 + 2]
														end
													elseif (2225 < (3979 - 1689)) and (v93 == 7) then
														do
															return
														end
													else
														v90[v92[1 + 1]] = v92[2 + 1]
													end
												elseif (v93 <= 9) or (((3072 - (333 + 1603)) - (86 + 407)) >= 1217) then
													v90[v92[2]] = v37[v92[3 - 0]]
												elseif (v93 == (31 - 21)) or ((2763 - 526) == (1635 - (4 + 69))) then
													v90[v92[(4 + 3) - 5]] = v90[v92[3]][v92[662 - (543 + 115)]]
												else
													local v140 = (871 - (458 + 413)) - 0
													local v141
													while true do
														if ((1548 - 992) < 3493) and (v140 == (0 + 0)) then
															v141 = v92[1642 - (1563 + 77)]
															v90[v141](v13(v90, v141 + (2 - 1), v92[1095 - (953 + 139)]))
															break
														end
													end
												end
												v79 = v79 + 1 + 0 + 0
												break
											end
										end
										break
									end
								end
							end
						end
						A, B = v32(v11(v83))
						if not A[1] then
							local v98 = v35[4][v79] or "?"
							error("Script error at [" .. v98 .. "]:" .. A[2])
						else
							return v13(A, 2, B)
						end
					end
				end
				if v65 == 0 then
					v66 = v35[1]
					v67 = v35[2]
					v65 = 1
				end
			end
		end
		return v34(v33(), {}, v17)(...)
	end
	v15(
		"LOL!173O00028O00026O00104003023O002O6703073O0065646974412O6C03193O0068202O30202O3020383020353220433020303320354620443603093O00545950455F42595445030C3O00636C656172526573756C747303053O00746F61737403113O005363726970742066696E69736865642O3F026O00F03F030A3O0073657456697369626C6503053O00616C657274033A3O002O3F5461736B2026205265776172647320436C69636B6572206279202120566572696665644D612O74233O3031205B7632332E312E335D2O3F030C3O007365617263684E756D62657203613O0068204633203742204246204139204633203033202O30202O41204537202O46202O46203937204530202O30202O30203336203630203241203430204639203630203031202O30204234203038202O30203430204639203039203835203539204139027O004003093O0073657452616E676573030F3O00524547494F4E5F434F44455F412O50030A3O00676574526573756C7473026O00204003193O0068203230202O30203830204432204330203033203546204436026O00084003613O0068204635203533204245204139204633203742203031204139203135203942203032204630204138203545203733203339204633203033203031203241204634203033202O30202O41204338202O30202O30203337204130203734203032204630007B3O0012083O00014O0004000100013O0026063O00020001000100044O00020001001208000100013O002606000100150001000200044O00150001001209000200033O00200A000200020004001208000300053O001209000400033O00200A0004000400062O000B000200040001001209000200033O00200A0002000200072O0001000200010001001209000200033O00200A000200020008001208000300094O000300020002000100044O007A00010026060001002B0001000100044O002B0001001208000200013O0026060002001F0001000A00044O001F0001001209000300033O00200A0003000300072O00010003000100010012080001000A3O00044O002B0001002606000200180001000100044O00180001001209000300033O00200A00030003000B2O000500046O0003000300020001001209000300033O00200A00030003000C0012080004000D4O00030003000200010012080002000A3O00044O00180001002606000100450001000A00044O00450001001208000200013O002606000200380001000A00044O00380001001209000300033O00200A00030003000E0012080004000F3O001209000500033O00200A0005000500062O000B000300050001001208000100103O00044O004500010026060002002E0001000100044O002E0001001209000300033O00200A00030003000B2O000500046O0003000300020001001209000300033O00200A000300030011001209000400033O00200A0004000400122O00030003000200010012080002000A3O00044O002E00010026060001005D0001001000044O005D0001001208000200013O002606000200550001000100044O00550001001209000300033O00200A000300030013001208000400144O0003000300020001001209000300033O00200A000300030004001208000400153O001209000500033O00200A0005000500062O000B0003000500010012080002000A3O002606000200480001000A00044O00480001001209000300033O00200A0003000300072O0001000300010001001208000100163O00044O005D000100044O00480001002606000100050001001600044O00050001001208000200013O002606000200680001000A00044O00680001001209000300033O00200A000300030013001208000400144O0003000300020001001208000100023O00044O00050001000E02000100600001000200044O00600001001209000300033O00200A000300030011001209000400033O00200A0004000400122O0003000300020001001209000300033O00200A00030003000E001208000400173O001209000500033O00200A0005000500062O000B0003000500010012080002000A3O00044O0060000100044O0005000100044O007A000100044O000200012O00073O00017O007B3O00023O00033O00053O00053O00063O00083O00083O00093O00093O00093O00093O00093O00093O000A3O000A3O000A3O000B3O000B3O000B3O000B3O000C3O000E3O000E3O000F3O00113O00113O00123O00123O00123O00133O00143O00163O00163O00173O00173O00173O00173O00183O00183O00183O00183O00193O001A3O001D3O001D3O001E3O00203O00203O00213O00213O00213O00213O00213O00213O00223O00233O00253O00253O00263O00263O00263O00263O00273O00273O00273O00273O00273O00283O00293O002C3O002C3O002D3O002F3O002F3O00303O00303O00303O00303O00313O00313O00313O00313O00313O00313O00323O00343O00343O00353O00353O00353O00363O00373O00383O003B3O003B3O003C3O003E3O003E3O003F3O003F3O003F3O003F3O00403O00413O00433O00433O00443O00443O00443O00443O00443O00453O00453O00453O00453O00453O00453O00463O00473O00493O004B3O004C3O004E3O00",
		v9(),
		...
	)
end
