--[[
credit to SaanModz for the functions that i skid

https://gameguardian.net/forum/files/file/3026-classlua/#google_vignette
]]
--

function O_dinitial_search(class)
	gg.setRanges(gg.REGION_OTHER)

	gg.searchNumber(":" .. class, gg.TYPE_BYTE)
	count = gg.getResultsCount()
	if count == 0 then
	else
		Refiner = gg.getResults(1)
		gg.refineNumber(Refiner[1].value, gg.TYPE_BYTE)
		count = gg.getResultsCount()

		val = gg.getResults(count)
		gg.addListItems(val)
	end
end

--7c99170000
--7cc3513000

function CA_pointer_search()
	gg.clearResults()
	gg.setRanges(gg.REGION_C_ALLOC)
	gg.loadResults(gg.getListItems())
	gg.searchPointer(0)
	count = gg.getResultsCount()
	vel = gg.getResults(count)
	gg.clearList()
	gg.addListItems(vel)
end

function CA_apply_offset()
	tanker = 0xfffffffffffffff0
	local copy = false
	local l = gg.getListItems()
	if not copy then
		gg.removeListItems(l)
	end
	for i, v in ipairs(l) do
		v.address = v.address + tanker
		if copy then
			v.name = v.name .. " #2"
		end
	end
	gg.addListItems(l)
end

function A_base_value()
	gg.setRanges(gg.REGION_ANONYMOUS)
	gg.loadResults(gg.getListItems())
	gg.clearList()
	gg.searchPointer(0)
	count = gg.getResultsCount()

	tel = gg.getResults(count)
	gg.addListItems(tel)
end

function A_base_accuracy()
	gg.setRanges(gg.REGION_ANONYMOUS | gg.REGION_C_ALLOC)
	gg.loadResults(gg.getListItems())
	gg.clearList()
	gg.searchPointer(0)
	count = gg.getResultsCount()
	kol = gg.getResults(count)
	i = 1
	h = {}
	while (i - 1) < count do
		h[i] = {}
		h[i].address = kol[i].value
		h[i].flags = 32
		i = i + 1
	end

	gg.addListItems(h)
end

function A_user_given_offset(_offset, type)
	local _offset = load("return " .. _offset)()

	local old_save_list = gg.getListItems()
	for i, v in ipairs(old_save_list) do
		v.address = v.address + _offset
		v.flags = type
	end

	gg.clearResults()
	gg.loadResults(old_save_list)
end

function Patch(lib, offset, hex)
	gg.setVisible(false)

	local targetAddr = 0

	local hexStrCount = #hex:gsub(" ", "")

	if hexStrCount % 2 ~= 0 then
		return print("Check your hex again. Something wrong there")
	end

	local hexCount = hexStrCount / 2

	for i, v in ipairs(gg.getRangesList(lib)) do
		if v.type:sub(3, 3) == "x" then
			targetAddr = v.start + offset
			break
		end
	end

	local editHex = {}

	for i = 1, hexCount do
		editHex[i] = { address = targetAddr + (i - 1), flags = gg.TYPE_BYTE }
	end

	gg.loadResults(editHex)

	gg.getResults(hexCount)

	local edit = "h" .. hex

	gg.editAll(edit, 1)

	gg.clearResults()
end

function findClassPointer(class)
	gg.clearResults()
	gg.clearList()

	O_dinitial_search(class)
	CA_pointer_search()
	CA_apply_offset()
	A_base_value()
	A_base_accuracy()
end

function hackOffset(_offset, type, value)
	A_user_given_offset(_offset, type)
	gg.refineNumber("0~40", type)
	gg.getResults(99999999)
	gg.editAll(value, type)
end

local check1 = false

function iterate(class)
	for i, v in ipairs(class) do
		hackOffset(v[1], v[2], v[3])
	end
end

local bigFloat = "1000000.0"
local class = "WeaponSounds"

local polymorpher = {

	{
		"0x2D4",
		gg.TYPE_BYTE,
		1,
	},
	{
		"0x2D8",
		gg.TYPE_FLOAT,
		bigFloat,
	},
	{
		"0x3B4",
		gg.TYPE_DWORD,
		0,
	},
	{
		"0x2E0",
		gg.TYPE_FLOAT,
		bigFloat,
	},
	{
		"0x2A4",
		gg.TYPE_BYTE,
		1,
	},
	{
		"0x2C8",
		gg.TYPE_FLOAT,
		bigFloat,
	},
	{
		"0x2C0",
		gg.TYPE_FLOAT,
		bigFloat,
	},
}

local electricShock = {
	{
		"0x404",
		gg.TYPE_BYTE,
		1,
	},
	{
		"0x408",
		gg.TYPE_FLOAT,
		bigFloat,
	},
	{
		"0x40C",
		gg.TYPE_FLOAT,
		bigFloat,
	},
}

local infScore = {
	{
		"0x368",
		gg.TYPE_BYTE,
		1,
	},
	{
		"0x374",
		gg.TYPE_FLOAT,
		99999,
	},
}

local mrBaest = {
	{
		"0x346",
		gg.TYPE_BYTE,
		1,
	},
	{
		"0x348",
		gg.TYPE_FLOAT,
		5,
	},
	{
		"0x34C",
		gg.TYPE_FLOAT,
		bigFloat * 100,
	},
}

local reflection = {

	{
		"0x2F9",
		gg.TYPE_BYTE,
		1,
	},
	{
		"0x2FA",
		gg.TYPE_BYTE,
		0,
	},
	{
		"0x2FC",
		gg.TYPE_FLOAT,
		-99999999.0,
	},
}

local coinDrop = {
	{
		"0x318",
		gg.TYPE_BYTE,
		1,
	},
	{
		"0x31C",
		gg.TYPE_FLOAT,
		99999999.0,
	},
}

local blockJump = {
	{
		"0x20E",
		gg.TYPE_BYTE,
		1,
	},
	{
		"0x210",
		gg.TYPE_FLOAT,
		"99999999.0",
	},
}

function griefierMenu()
	if not check1 then
		Patch("libil2cpp.so", 0x49AF408, "00 00 80 52 C0 03 5F D6")
		gg.toast("initializing pointer, pls wait")
		findClassPointer("WeaponSounds")
		gg.alert(
			"if the cheat randomly stops working or activating cheat but nothing happnes, try to Refind Pointer while in polygon or training ground. Then reactive cheats you activated before. \n\n"
		)
		check1 = true
	end

	local menu = gg.choice({

		"Polymorpher", --1
		"Electric Shock (Sensitivity Troll)", --2
		"mr baest meele", --3
		"Drop Coin on kill", --4
		"Infinite Points on kill", --5
		--"Unlimited Ammo", --6
		"Jump Disabler", --7
		"Refind Pointer", --8
		"Exit", --9
	}, { nil }, "Griefer Menu")
	if menu == nil then
	else
		if menu == 1 then
			iterate(polymorpher)
		end

		if menu == 2 then
			iterate(electricShock)
		end

		if menu == 3 then
			iterate(mrBaest)
		end

		if menu == 4 then
			iterate(coinDrop)
		end

		if menu == 5 then
			iterate(infScore)
		end

		if menu == 6 then
			iterate(blockJump)
		end

		if menu == 7 then
			findClassPointer("WeaponSounds")
		end

		if menu == 8 then
			os.exit()
		end
	end

	SMZ = -1
end

local loop = false

function remind()
	local reminder = gg.choice({
		"continue",
		"exit",
	}, { nil }, "you must activate this Greifer Menu while in polygon or training ground, otherwise it will not work.")

	if reminder == 1 then
		loop = true
	end

	if reminder == 2 then
		os.exit()
	end
end

local menu = gg.choice({
	"Greifer Menu",
	"XP Spoofer",
	"Hide ID (untested)",
	"Friendly Fire",
	--"Swear Filter Bypass",
	"Exit",
}, {
	nil,
}, "gg.choice == mod menu ðŸ¤‘\n\ncredit to zygiskPg source code for the offsets.")

if menu == 1 then
	remind()
end

if menu == 2 then
	Patch("libil2cpp.so", 0X1C7B15C, "A0 F0 8F D2 C0 03 5F D6")
end

if menu == 3 then
	Patch("libil2cpp.so", 0X48102E4, "C0 03 5F D6")
end

if menu == 4 then
	Patch("libil2cpp.so", 0X150EB64, "00 00 80 D2 C0 03 5F D6")
	Patch("libil2cpp.so", 0x150FE78, "00 00 80 D2 C0 03 5F D6")
end

--[[if menu == 5 then

	Patch("libil2cpp.so", 0x4A89DC0, "00 00 80 D2 C0 03 5F D6")
	
end]]
--

if menu == 5 then
	os.exit()
end

while loop do
	if gg.isVisible(true) then
		gg.setVisible(false)
		SMZ = 1
	else
		if SMZ == 1 then
			griefierMenu()
		end
	end
end
