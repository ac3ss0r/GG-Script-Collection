local v0 = string.char
local v1 = string.byte
local v2 = string.sub
local v3 = bit32 or bit
local v4 = v3.bxor
local v5 = table.concat
local v6 = table.insert
local function v7(v8, v9)
	local v10 = 0
	local v11
	local v12
	local v13
	local v14
	while true do
		if v10 == 0 then
			v11 = 0
			v12 = nil
			v10 = 1
		end
		if v10 == 1 then
			v13 = nil
			v14 = nil
			v10 = 2
		end
		if v10 == 2 then
			while true do
				if v11 == 1 then
					v14 = nil
					while true do
						if v12 == (0 + 0) then
							local v15 = 0 - 0
							while true do
								if 1 == v15 then
									v12 = 1 + 0
									break
								end
								if v15 == 0 then
									v13 = 0 + (0 - 0)
									v14 = nil
									v15 = 1555 - (1299 + 255)
								end
							end
						end
						if (1 + 0) == v12 then
							while true do
								local v16 = 0
								local v17
								while true do
									if v16 == (781 - (287 + 494)) then
										v17 = 0 - 0
										while true do
											if v17 == 0 then
												if
													v13
													== (
														((2437 - (602 + 618)) - (362 - 89))
														- ((1650 - ((1063 - (596 + 227)) + 664)) + 29 + 169)
													)
												then
													local v18 = 137 - (64 + 73)
													local v19
													while true do
														if v18 == ((334 - (290 + 44)) - 0) then
															v19 = 1866 - (192 + 877 + 797)
															while true do
																if v19 == ((1 + 0) - 0) then
																	v13 = 1
																		+ 0
																		+ (1764 - (861 + 903))
																		+ (962 - (182 + 780))
																	break
																end
																if v19 == (0 + 0) then
																	local v20 = 0 + 0
																	while true do
																		if v20 == 0 then
																			v14 = {}
																			for v21 = 1 + 0 + (209 - (202 + 7)), #v8 do
																				v6(
																					v14,
																					v0(
																						v4(
																							v1(
																								v2(
																									v8,
																									v21,
																									v21 + 1 + (0 - 0)
																								)
																							),
																							v1(
																								v2(
																									v9,
																									(
																										(777 - 214)
																										- (427 + 135)
																									)
																										+ (
																											(
																												v21
																												- (
																													1
																													+ 0
																													+ ((0 - 0) - (648 - (526 + 122)))
																													+ 0
																												)
																											)
																											% #v9
																										),
																									(
																										(3 + 0 + 0 + 0)
																										- (
																											4
																											- (
																												(4 - 3)
																												+ 1
																											)
																										)
																									)
																										+ ((v21 - (((1126 + 550) - ((2898 - (1741 + 92)) + (2482 - (1120 + 752)))) + (370 - (244 + 126)))) % #v9)
																										+ ((3481 - 2518) - ((175 - (102 + 22)) + (2051 - (120 + 1020))))
																										+ 0
																										+ ((0 - 0) - 0)
																								)
																							)
																						)
																							% (
																								(
																									(891 + 79)
																									- (
																										(1247 - 818)
																										+ (466 - 179)
																									)
																								)
																								+ (
																									((493 + 198) - 409)
																									- (
																										(
																											(571 + 177)
																											- (
																												25
																												+ (
																													1747
																													- (
																														540
																														+ 672
																													)
																												)
																											)
																										)
																										+ 92
																									)
																								)
																							)
																					)
																				)
																			end
																			v20 = 1
																		end
																		if v20 == 1 then
																			v19 = 459 - (313 + 145)
																			break
																		end
																	end
																end
															end
															break
														end
													end
												end
												if ((4974 - 3243) - ((5215 - 3615) + 130)) == v13 then
													return v5(v14)
												end
												break
											end
										end
										break
									end
								end
							end
							break
						end
					end
					break
				end
				if v11 == (0 - 0) then
					v12 = (0 + 0) - (404 - (229 + 175))
					v13 = nil
					v11 = 120 - (38 + 81)
				end
			end
			break
		end
	end
end
gg.setVisible(false)
gg.alert(
	v7(
		"\33\91\249\242\179\153\187\39\95\253\248\225\219\232\85\121\230\240\240\212\254\7\26\232\224\179\251\250\7\83\169\168\160\140\168\85\97\252\171\160\145\170\91\10\215",
		"\117\58\138\153\147\191\155"
	)
)
gg.clearResults()
gg.setVisible(false)
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber(
	v7(
		"\6\175\150\134\78\184\146\149\44\201\240\244\87\175\150\134\78\191\227\149\94\191\240\244\47\175\149\130\78\201\150\149\40\201\240\140\89\175\149\133\78\191\224\149\94\191\240\134\88\175\230\133\78\189\145\149\90\191\240\243\87\175\230\133\78\191\225\149\94\191\240\247\90\175\224\141\78\191\224\149\90\191\240\243\87\175\224\140\78\183\229\149\91\182\240\244\87",
		"\110\143\208\181"
	),
	gg.TYPE_BYTE
)
gg.getResults(
	((2687 - (95 + 626)) - (1795 + (1136 - (903 + 75))))
		- ((((6919 - 3568) - (98 + 1593)) - (12 + 1258 + 301 + 72)) - (678 - ((652 - 372) + (674 - 288))))
)
gg.editAll(
	v7(
		"\41\176\254\160\232\113\136\137\121\160\236\212\250\97\251\153\97\160\255\176\253\7\152\237\119",
		"\65\144\204\144\200\65\184\169"
	),
	gg.TYPE_BYTE
)
gg.clearResults()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber(
	v7(
		"\91\228\224\78\180\98\0\228\228\62\180\22\10\228\224\72\180\96\113\228\150\74\180\22\10\228\228\78\180\21\10\228\150\73\180\17\3\228\231\67\180\17\114\228\147\79\180\100\10\228\224\72\180\103\0\228\150\74\180\101\114\228\224\79\180\103\0\228\150\75\180\22\114\228\229\67\180\103\3\228\150\75\180\100\4\228\231\75\180\110\5\228\150\73\180\110\3",
		"\51\196\166\123\148\87"
	),
	gg.TYPE_BYTE
)
gg.getResults(
	(((17 - 3) - 8) + (((33 + 23) - (89 - 56)) - ((7 + 18) - 12)))
		- (((117 - (356 - (310 + 18))) - (12 + (1336 - ((2419 - 1535) + (667 - 270))))) - ((22 + 11) - (7 + 12)))
)
gg.editAll(
	v7("\20\30\166\99\92\14\166\115\68\14\182\102\78\30\213\99\92\14\165\115\73\120\182\23\74", "\124\62\150\83"),
	gg.TYPE_BYTE
)
gg.clearResults()
gg.toast(v7("\173\184\139\32\47\146\168\182\223\32\44\215\202\135\202\39\51\147", "\234\215\171\84\64\178"))
