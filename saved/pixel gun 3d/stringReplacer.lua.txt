function isUTF16(utf16)
	local stringTag
	local addressJump
	if utf16 == true then
		stringTag = ";"
		addressJump = 2
	else
		stringTag = ":"
		addressJump = 1
	end
	return stringTag, addressJump
end

function setNewName()
	local stringTag, addressJump = isUTF16(playername[2])
	local t = gg.getResults(gg.getResultsCount())
	local replaceString = {}
	local stringSize = {}
	local str = {}
	gg.clearResults()
	for i = 1, #editname[1] do
		str[i] = string.sub(editname[1], i, j)
	end
	for i = 1, #t do
		stringSize[#stringSize + 1] = { address = t[i].address - 0x4, flags = gg.TYPE_WORD }
		for charCount = 1, #editname[1] do
			replaceString[#replaceString + 1] =
				{ address = t[i].address, flags = gg.TYPE_WORD, value = string.byte(string.sub(str[charCount], 1, 1)) }
			t[i].address = t[i].address + addressJump
		end
	end
	stringSize = gg.getValues(stringSize)
	for i, v in ipairs(stringSize) do
		if v.value == #playername[1] then -- only sets value for strings that have a string length value
			v.value = #editname[1]
		end
	end
	gg.setValues(stringSize)
	gg.setValues(replaceString)
	gg.toast("New name set")
end

function findName()
	local stringTag, addressJump = isUTF16(playername[2])
	gg.searchNumber(stringTag .. playername[1])
	local a = gg.getResults(gg.getResultsCount())
	if #a == 0 then
		gg.toast("name not found, search again")
	else
		local stringLength = #playername[1]
		for i = 1, stringLength do
			gg.refineNumber(stringTag .. string.sub(playername[1], 1, stringLength)) -- refine string name
			stringLength = stringLength - 1
		end
		prompt_edit()
	end
end

function noselect()
	gg.toast("You not select anything")
end

function prompt_edit()
	editname = gg.prompt({ [1] = "Input name to modify to" }, { [1] = "0" }, { [1] = "text" })
	if editname == nil then
		noselect()
		gg.clearResults()
	else
		setNewName()
	end
end

function prompt_search()
	playername = gg.prompt(
		{ [1] = "Input name to search for", [2] = "UTF 16" },
		{ [1] = "0", [2] = false },
		{ [1] = "text", [2] = "checkBox" }
	)
	if playername == nil then
		noselect()
	else
		findName()
	end
end

while true do
	if gg.isVisible() then
		gg.setVisible(false)
		prompt_search()
	end
	gg.sleep(100)
end
